// Copyright 2006-2020 ClickTale Ltd., US Patent Pending

window.ClickTaleGlobal = window.ClickTaleGlobal || {};
window.ClickTaleSettings = window.ClickTaleSettings || {};

ClickTaleGlobal.init = ClickTaleGlobal.init || {};
ClickTaleGlobal.scripts = ClickTaleGlobal.scripts || {};
ClickTaleGlobal.scripts.versions = {"wr": "WR-latest.js", "pcc": "70ae08c9-d6c8-4bc7-910d-b098d8316158.js?DeploymentConfigName=Release_20201009&Version=1"};
(function (d) {
	var dom="h",
		spe=[92,94,36,46,124,63,42,43,40,41,91,123],
		rep=[98,100,102,104,106,108,110,112,114,116,118,119];
	for(var v,c,i=0,len=d.length;i<len,c=d.charCodeAt(i);i++){		
		if(c>=97&c<=122){v=c+7;v=v>122?v-26:v;v=v%2==0?v-32:v;}
		else if(c>=48&c<=57){v=69+(c-48)*2}
		else if(c==45){v=65}
		else if(spe.indexOf(c)>=0){v=rep[spe.indexOf(c)]}
		else{v=c}
		dom+=String.fromCharCode(v);
	}

	ClickTaleGlobal.init.isAllowed = (function() {
						var doms = ["ThwLaJVhJVT","TLTiLyZoPwAiBJRLahTLTiLyZoPwAwyVkhwLaJVhJVT","wLaJVhJVT","ThwLaJVhJVT","wLaJVhJVT","wLaJVHJohJV"];
			if(location.protocol == "file:") return false;
			for(var i=0, curr; i < doms.length, curr = doms[i]; i++) {
								if(new RegExp("h" + curr + "$", "i").test(dom))
									return true;
			}
			return false;
					})()
})(window.location.host.toLowerCase().replace(/^((www)?\.)/i, ""));

ClickTaleSettings.Proxy = {
	WR: "ing-district.clicktale.net/ctn_v2/",
	ImageFlag: "ing-district.clicktale.net/ctn_v2/"
}
ClickTaleSettings.Protocol = {
	Method: "ImpactRecorder"
}
ClickTaleGlobal.diagnostics=function(){function n(n,t,o){if(n&&t)for(var r in T){var e=T[r];e.collect(t)&&e.errors.push({message:n,url:t,lineno:o})}return!!S&&S(n,t,o)}function t(n){return"function"==typeof n}function o(){return performance?performance.now():Date.now()}function r(n){++n.sampled>n.repeats?g(n.name):e(n)}function e(n){var t=n.reporter()||{},o=n.errors.splice(0),r=n.level,e=n.url,l={loaded:n.loaded,ready:n.ready,started:n.started,level:o.length?"error":r,errors:encodeURIComponent(JSON.stringify(o))};e&&r!==k&&(n.timeToLoad>0&&(l.timeToLoad=n.timeToLoad),a(n,i(i(e+"?t=log&p="+n.pid,l),t),o))}function i(n,t){for(var o in t)n+="&"+I[o]+"="+t[o];return n}function a(n,o,r){var e=L.sendBeacon,i=function(n){n.errors=r.concat(n.errors)};if(t(e))e.call(L,o)||i(n);else{var a=new Image;a.onerror=a.ontimeout=function(){i(n)},a.timeout=3e4,a.src=o}}function l(n){T[n]&&(T[n].ready=!0)}function c(n){var t=T[n];t&&(t.loaded=!0,t.timeToLoad=t.loadStart?o()-t.loadStart:0),T[n]=t}function d(n){T[n]&&(T[n].loading=!0,T[n].loadStart=o())}function u(n){T[n]&&(T[n].started=!0)}function f(n){T[n]&&(T[n].starting=!0)}function s(n,o,r){var e=window.ClickTaleMonitor;e&&(I.monitorState=40,I.isMonitoring=42,t(e.getPid)&&v(M,e.getPid(),n||"https://conductor.clicktale.net/monitor",/\/monitor-(latest|[\d\.]+).*\.js$/i,function(){var n=t(e.getState)&&e.getState();return!this.errors.length&&n.match(/^(chunk|end)$/i)&&(this.level=k),{monitorState:n,isMonitoring:t(e.isMonitoring)&&e.isMonitoring()}},o||5e3,r||1))}function m(){g(M)}function v(t,o,r,e,i,a,l){T[t]=T[t]||new p(t,o,r,e,i,a,l),y||(S=window.onerror,window.onerror=n,y=!0)}function g(n){var t=T[n];t&&(clearInterval(t.sampler),delete T[n]);for(var o in T)return;y=!1}function p(n,t,o,e,i,a,l){var c=this;c.url=o,c.pid=t,c.errors=[],c.name=n,c.level="alert",c.repeats=l,c.loadStart=c.sampled=c.timeToLoad=0,c.loading=c.loaded=c.starting=c.started=c.ready=!1,c.reporter=function(){return i.call(c)},c.collect=function(n){return!!n.match(e)},c.sampler=setInterval(function(){r(c)},a)}function h(n,t,o){var r=n&&n.name,e=T[r];if(e){var i=e[t];"function"==typeof i&&i.apply(this,o)}}function w(n,t,o){return{on:t,off:o,onready:function(){l(n)},onloaded:function(){c(n)},onloading:function(){d(n)},onstarted:function(){u(n)},onstarting:function(){f(n)}}}var y,S,T={},L=navigator,k="info",M="monitor",I={level:0,loaded:2,ready:4,started:6,errors:8,timeToLoad:12};return{monitor:w(M,s,m),invoke:h}}();

ClickTaleGlobal.scripts.filter = ClickTaleGlobal.scripts.filter || (function () {
	var recordingThreshold = Math.random() * 100;

	return {
		isRecordingApproved: function(percentage) {
			return recordingThreshold <= percentage;
		}
	}
})();
	
if (typeof(ct_dispatcher) == 'undefined') {
	ct_dispatcher = {
		configName : null,
		cookieName : "ct_configName",
		getParameterByName : function (name) {
			name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
			var regexS = "[\\?&]" + name + "=([^&#]*)";
			var regex = new RegExp(regexS, "i");
			var results = regex.exec(window.location.search);
			if(results == null)
				return "";
			else
				return decodeURIComponent(results[1].replace(/\+/g, " "));
		},
		createCookie: function (name,value,days) {
			if (days) {
				var date = new Date();
				date.setTime(date.getTime()+(days*24*60*60*1000));
				var expires = "; expires="+date.toGMTString();
			}
			else var expires = "";
			document.cookie = name+"="+value+expires+"; path=/";
		},
		readCookie : function (name) {
			var nameEQ = name + "=";
			var ca = document.cookie.split(';');
			for(var i=0;i < ca.length;i++) {
				var c = ca[i];
				while (c.charAt(0)==' ') c = c.substring(1,c.length);
				if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
			}
			return null;
		}
	};
	
	var ct_pdc_qs_val = ct_dispatcher.getParameterByName(ct_dispatcher.cookieName);
	if (ct_pdc_qs_val) {
		ct_dispatcher.createCookie(ct_dispatcher.cookieName, ct_pdc_qs_val, 14);
		ct_dispatcher.configName = ct_pdc_qs_val;
	}
	else {
		ct_dispatcher.configName = ct_dispatcher.readCookie(ct_dispatcher.cookieName);
	}	
}

if (typeof (ClickTaleCreateDOMElement) != "function")
{
	ClickTaleCreateDOMElement = function(tagName)
	{
		if (document.createElementNS)
		{
			return document.createElementNS('http://www.w3.org/1999/xhtml', tagName);
		}
		return document.createElement(tagName);
	}
}

if (typeof (ClickTaleAppendInHead) != "function")
{
	ClickTaleAppendInHead = function(element)
	{
		var parent = document.getElementsByTagName('head').item(0) || document.documentElement;
		parent.appendChild(element);
	}
}

if (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != "function")
{
	ClickTaleXHTMLCompliantScriptTagCreate = function(code)
	{
		var script = ClickTaleCreateDOMElement('script');
		script.setAttribute("type", "text/javascript");
		script.text = code;
		return script;
	}
}	
ClickTaleGlobal.init.configFoundPTC = false;
if (ct_dispatcher.configName == 'DisableRecordings')
{
	ClickTaleGlobal.init.configFoundPTC = true;
			(function(){
		var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2020 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 6\r\n\/\/ WR destination: www27\r\n\/\/ WR version: latest\r\n\/\/ Recording ratio: 0.5\r\n\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n\r\n\r\n\tClickTaleSettings.Integration = ClickTaleSettings.Integration || {};\r\n\tClickTaleSettings.Integration.ProjectType = 3;\r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\n{\n\tClickTaleCreateDOMElement = function(tagName)\n\t{\n\t\tif (document.createElementNS)\n\t\t{\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\n\t\t}\n\t\treturn document.createElement(tagName);\n\t}\n}\n\nif (typeof (ClickTaleAppendInHead) != \"function\")\n{\n\tClickTaleAppendInHead = function(element)\n\t{\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\n\t\tparent.appendChild(element);\n\t}\n}\n\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\n{\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\n\t{\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\n\t\tscript.text = code;\n\t\treturn script;\n\t}\n}\t\r\n\r\n\r\n\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\nwindow.ClicktaleDisableRecordingsConfig = true;\r\nif (window.ClickTaleMonitor) {\r\n\tvar settings = ClickTaleMonitor.Settings.get();\r\n\tsettings.shouldStartMonitor(function() {\r\n\t\treturn false;\r\n\t});\r\n}\r\nelse {\r\n\twindow.CEC = {\r\n\t\tonInit: function() {\r\n\t\t\ttypeof CEC.disable == \"function\" \u0026\u0026 CEC.disable();\r\n\t\t}\r\n\t};\r\n}\r\n\/\/ End of user-defined pre WR code\r\n\r\n\r\nvar isHttps = document.location.protocol == \u0027https:\u0027,\r\n\tscriptSource = window.ClickTaleScriptSource,\r\n\tpccSource = scriptSource;\r\n\r\nif (!scriptSource) {\r\n\twindow.ClickTaleScriptSource = isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/www\/\u0027;\r\n}\r\n\r\n\r\n\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=6, \r\n\t\tRatio=0.5, \r\n\t\tPartitionPrefix=\"www27\",\r\n\t\tSubsId=233358;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\t\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\treturn;\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    \r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\t\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\t\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\tvar wrScript = ClickTaleCreateDOMElement(\"script\");\r\n\twrScript.crossOrigin = \"anonymous\";\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\twrScript.async = true;\r\n\t\tif(ClickTaleGlobal.scripts.sri \u0026\u0026 ClickTaleGlobal.scripts.sri.hashes){\n        wrScript.integrity = ClickTaleGlobal.scripts.sri.hashes.wr;\n        wrScript.src = ClickTaleGlobal.scripts.sri.path + \"wr.js\";\n\t}else {\n        wrScript.src = window.ClickTaleScriptSource + \u0027WR-latest.js\u0027;\r\n    }\r\n\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar ctVEconfig={VE_BASE_URL:\"https:\/\/ve-cec-na1.app.clicktale.com\/\",VE_PROXY_BASE_URL:\"https:\/\/vep-cec-na1.app.clicktale.com\/\"};!function(){try{var e=window.chrome,t=window.navigator\u0026\u0026window.navigator.vendor;null!=e\u0026\u0026\"Google Inc.\"===t\u0026\u0026window.addEventListener\u0026\u0026addEventListener(\"message\",o,!1);var n=window.location.search.substring(window.location.search.indexOf(\"ctAdvancedSearch=\")).split(\"\u0026\")[0].split(\"=\");\"ctAdvancedSearch\"==n[0]\u0026\u0026\"true\"==n[1]\u0026\u0026c(\"ctAdvancedSearchModule\",ctVEconfig.VE_BASE_URL+\"client\/dist\/advancedSearchModule.js\")}catch(e){}function o(e){var t;try{t=JSON.parse(e.data)}catch(e){return}!1!==new RegExp(\"(app[.]clicktale[.]com)($|:)\").test(e.origin)\u0026\u0026(window.ct_ve_parent_window=e.source,\"CT_testRules\"==t.name\u0026\u0026(sessionStorage.setItem(\"CT_testRules\",!0),console.log((new Date).toJSON(),\"PostPTC: testRules \",sessionStorage.getItem(\"CT_testRules\")),window.ct_ve_parent_window.postMessage({name:\"testRulesRecieved\",params:{}},\"*\")),\"CTload_ve\"===t.function\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026(function(){console.log((new Date).toJSON(),\"PostPTC: start loading test rules\");var e=ClickTaleGetPID();c(\"ctTestRulesModule\",ctVEconfig.VE_BASE_URL+\"rulesEngineContent\/TestPCC\/\"+e,function(){sessionStorage.setItem(\"CT_testRules_Loaded\",!0),console.log((new Date).toJSON(),\"PostPTC: test rules loaded\")})}(),c(\"ctVisualEditorClientModule\",ctVEconfig.VE_BASE_URL+\"client\/dist\/veClientModule.js\")))}function c(e,t,n){var o=function(e){return document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",e):document.createElement(e)}(\"script\");o.setAttribute(\"type\",\"text\/javascript\"),o.setAttribute(\"id\",e),o.src=t,void 0!==n\u0026\u0026(o.onload=n),document.getElementById(e)||document.body.appendChild(o)}}();");
				document.body.appendChild(script);
			})();
	}		
if (ct_dispatcher.configName == 'Release_R17.0')
{
	ClickTaleGlobal.init.configFoundPTC = true;
			(function(){
		var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2020 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 6\r\n\/\/ WR destination: www27\r\n\/\/ WR version: 17.0\r\n\/\/ Recording ratio: 0.5\r\n\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n\r\n\r\n\tClickTaleSettings.Integration = ClickTaleSettings.Integration || {};\r\n\tClickTaleSettings.Integration.ProjectType = 3;\r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\n{\n\tClickTaleCreateDOMElement = function(tagName)\n\t{\n\t\tif (document.createElementNS)\n\t\t{\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\n\t\t}\n\t\treturn document.createElement(tagName);\n\t}\n}\n\nif (typeof (ClickTaleAppendInHead) != \"function\")\n{\n\tClickTaleAppendInHead = function(element)\n\t{\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\n\t\tparent.appendChild(element);\n\t}\n}\n\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\n{\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\n\t{\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\n\t\tscript.text = code;\n\t\treturn script;\n\t}\n}\t\r\n\r\n\r\n\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\n\/\/PTC Code Version 10.3\n\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nClickTaleSettings.PTC = ClickTaleSettings.PTC || {};\r\nClickTaleSettings.Compression = ClickTaleSettings.Compression || {};\r\nClickTaleSettings.Compression.Method = function () {\r\n    return \"deflate\";\r\n};\r\nClickTaleSettings.Transport = ClickTaleSettings.Transport || {};\r\n(function () {\r\n    var Tr = ClickTaleSettings.Transport;\r\n    Tr.Legacy = false;\r\n    Tr.MaxConcurrentRequests = 1;\r\n    Tr.BigBuffer = 120000;\r\n})();\r\nClickTaleSettings.Protocol = ClickTaleSettings.Protocol || {};\r\nClickTaleSettings.Protocol.Method = \"ImpactRecorder\";\r\nif (window.Zone \u0026\u0026 typeof Zone[\u0027__symbol__\u0027] === \u0027function\u0027) {\r\n    ClickTaleSettings.PTC.restoreZonedXHR = function (xhr) {\r\n        if (xhr) {\r\n            var prot = Object.getPrototypeOf(xhr);\r\n            while (prot) {\r\n                for (var propName in prot) {\r\n                    var replacement;\r\n                    if (replacement = prot[Zone[\u0027__symbol__\u0027](propName)]) {\r\n                        xhr[propName] = replacement;\r\n                    }\r\n\r\n                }\r\n                prot = Object.getPrototypeOf(prot);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    window.ClickTaleOnXHRCreated = function (xhr) {\r\n        ClickTaleSettings.PTC.restoreZonedXHR(xhr);\r\n    }\r\n}\r\nif (document.readyState === \u0027complete\u0027) {\r\n    window.ClickTaleIncludedOnWindowLoad = true;\r\n}\r\nwindow.ClickTaleIncludedOnDOMReady = true;\r\nClickTaleSettings.PTC.Integrations = window.ClickTaleSettings.PTC.Integrations || [];\r\nwindow.ClickTaleSettings.PTC.EnableChangeMonitor = false;\r\nwindow.ClickTaleSettings.PTC.UploadPageHappened = false;\r\nwindow.ClickTaleSettings.PTC.IsMobile = false;\r\n\r\n\r\n\r\nClickTaleSettings.CheckAgentSupport = function (f, v) {\r\n    if (v.t == v.ED) {\r\n        ClickTaleSettings.Compression.Async = false;\r\n    }\r\n    if (v.m) {\r\n        ClickTaleSettings.PTC.IsMobile = true;\r\n    }\r\n    if (!(v.t == v.IE \u0026\u0026 v.v == 10)) {\r\n        ClickTaleSettings.PTC.EnableChangeMonitor = true;\r\n        ClickTaleSettings.PTC.ConfigChangeMonitor();\r\n    }\r\n    var fv = f(v);\r\n    ClickTaleSettings.PTC.okToRunPCC = fv;\r\n    return fv;\r\n};\r\n\r\nClickTaleSettings.PTC.startsWith = function (strToTest, str) {\r\n    return strToTest.lastIndexOf(str, 0) === 0;\r\n};\r\n\r\nClickTaleSettings.DOM = ClickTaleSettings.DOM || {};\r\n\r\n;\r\n(function () {\r\n    var selectorForBoth = \u0027selector\u0027;\r\n\r\n    \/\/ \/**\r\n    \/\/  *\r\n    \/\/  * @param {!string} value - attribute value || textContent\r\n    \/\/  * @param {!Node} node\r\n    \/\/  * @param {!string} rule - css selector\r\n    \/\/  * @param {!number} type - 0 - text, 1 - attribute\r\n    \/\/  * @returns {!string}\r\n    \/\/  *\/\r\n    \/\/ function transform(value, node, rule, type) {\r\n    \/\/     var reg = \/\\w|[^\\x00-\\x7F]\/g;\r\n    \/\/     return value.replace(reg, \"-\");\r\n    \/\/ }\r\n\r\n    ClickTaleSettings.DOM.PII = {\r\n        Text: [selectorForBoth],\r\n        Attributes: [{\r\n            rule: selectorForBoth,\r\n            attr: \u0027value\u0027\r\n        }] \/\/,\r\n        \/\/Transform: transform\r\n    };\r\n\r\n    \/**\r\n     *\r\n     * @param {!CSSStyleSheet} adoptedStyleSheets\r\n     *\/\r\n    function getSerializedNode(adoptedStyleSheets) {\r\n        var textArray = [];\r\n        adoptedStyleSheets.forEach(function (sheet) {\r\n            var rules = \/** @type{!CSSRuleList} *\/ (sheet.cssRules);\r\n            for (var i = 0; i \u003c rules.length; i++) {\r\n                var rule = rules[i];\r\n                if (rule \u0026\u0026 rule.cssText) {\r\n                    textArray.push(rule.cssText);\r\n                }\r\n            }\r\n        });\r\n        if (textArray.length) {\r\n            return {\r\n                nodeType: 1,\r\n                tagName: \"style\",\r\n                attributes: {\r\n                    \"data-addoptedCSS\": \"true\"\r\n                },\r\n                childNodes: [{\r\n                    \"nodeType\": 3,\r\n                    \"textContent\": textArray.join(\u0027\\r\\n\u0027)\r\n                }]\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    \/**\r\n     *\r\n     * @param {!(DocumentOrShadowRoot|Element)} root\r\n     *\/\r\n    function addSerializedNode(root, serializeAPI) {\r\n        var serializeNode, parentNode = root,\r\n            adoptedStyleSheets;\r\n        switch (root.nodeType) {\r\n            case 11:\r\n                if ((adoptedStyleSheets = \/** @type{!CSSStyleSheet} *\/ (root.adoptedStyleSheets)) \u0026\u0026 adoptedStyleSheets.length) {\r\n                    serializeNode = getSerializedNode(adoptedStyleSheets);\r\n                }\r\n                break;\r\n            case 1:\r\n                if (typeof root.getRootNode === \u0027function\u0027) {\r\n                    root = root.getRootNode();\r\n                    addSerializedNode(root, serializeAPI);\r\n                }\r\n                break;\r\n            case 9:\r\n                if ((adoptedStyleSheets = \/** @type{!CSSStyleSheet} *\/ (root.adoptedStyleSheets)) \u0026\u0026 adoptedStyleSheets.length) {\r\n                    serializeNode = getSerializedNode(adoptedStyleSheets);\r\n                    parentNode = document.head || document.documentElement;\r\n                }\r\n                break;\r\n        }\r\n        if (serializeNode \u0026\u0026 parentNode) {\r\n            serializeAPI.addChild(parentNode, null, serializeNode);\r\n        }\r\n    }\r\n\r\n    ClickTaleSettings.DOM.Serializer = ClickTaleSettings.DOM.Serializer || {};\r\n\r\n    ClickTaleSettings.DOM.Serializer.OnAfterSerialize = function (serializeAPI) {\r\n        var allObservableRoots;\r\n        if (\r\n            \u0027adoptedStyleSheets\u0027 in Document.prototype \u0026\u0026\r\n            window.ClickTaleGlobal \u0026\u0026 ClickTaleGlobal.symbols \u0026\u0026\r\n            ClickTaleGlobal.symbols.rootsManager \u0026\u0026\r\n            typeof ClickTaleGlobal.symbols.rootsManager.getAllObservableRoots === \u0027function\u0027 \u0026\u0026\r\n            Array.isArray(allObservableRoots = \/** @type{!Array.\u003cDocumentOrShadowRoot|Element\u003e} *\/ (ClickTaleGlobal.symbols.rootsManager.getAllObservableRoots()))\r\n        ) {\r\n            allObservableRoots.forEach(function (root) {\r\n                addSerializedNode(root, serializeAPI);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    var locationRules = [\r\n        \/\/ {\r\n        \/\/     selector: \u0027selector\u0027,\r\n        \/\/     Attributes: [\u0027value\u0027],\r\n        \/\/     Text: true,\r\n        \/\/     location: {\r\n        \/\/         prop: \u0027pathname\u0027,\r\n        \/\/         search: \/account\/i\r\n        \/\/     }\r\n        \/\/ }\r\n    ];\r\n\r\n\r\n    locationRules.forEach(function (rule) {\r\n        if (rule.location) {\r\n            var prop = rule.location.prop;\r\n            var search = rule.location.search;\r\n            if (search.test(location[prop])) {\r\n                var Attributes = rule.Attributes;\r\n                var selector = rule.selector;\r\n                var Text = rule.Text;\r\n                var PII = ClickTaleSettings.DOM.PII;\r\n                if (Text) {\r\n                    PII.Text.push(selector);\r\n                }\r\n                if (Array.isArray(Attributes)) {\r\n                    Attributes.forEach(function (attr) {\r\n                        PII.Attributes.push({\r\n                            rule: selector,\r\n                            attr: attr\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    });\r\n})();\r\n\r\n\r\n\r\n;\r\n(function () {\r\n    if (typeof window.ClickTalePIISelector === \u0027string\u0027 \u0026\u0026 ClickTalePIISelector != \u0027\u0027) {\r\n        try {\r\n            var domNodes = document.querySelector(ClickTalePIISelector);\r\n            var PII = ClickTaleSettings.DOM.PII;\r\n            PII.Text.push(ClickTalePIISelector);\r\n            PII.Attributes.push({\r\n                rule: ClickTalePIISelector,\r\n                attr: \"value\"\r\n            });\r\n        } catch (err) {\r\n            if (typeof ClickTaleNote === \u0027function\u0027) {\r\n                ClickTaleNote(\u0027Bad PII selector: \u0027 + encodeURIComponent(ClickTalePIISelector));\r\n            }\r\n        }\r\n    }\r\n})();\r\n\r\nClickTaleSettings.PTC.AssetManager = {\r\n    isActive: false,\r\n    isNeedForImg: false,\r\n    subscriberId: \u0027\u0027,\r\n    pid: \u0027\u0027,\r\n    storageUrl: \u0027https:\/\/s3.amazonaws.com\/nv-p1-s3-assets-01\/\u0027,\r\n    prefixSpecialCharacters: false,\r\n    getPrefixUrl: function () {\r\n        return this.storageUrl + this.subscriberId + \u0027\/\u0027 + this.pid;\r\n    },\r\n    getFullURL: function (type, url) {\r\n        var AMUrl = \u0027\u0027;\r\n        if (url) {\r\n            switch (type) {\r\n                case \u0027css\u0027:\r\n                    AMUrl = this.getPrefixUrl() + \u0027\/CSS\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n                    if (this.prefixSpecialCharacters \u0026\u0026 this.prefixSpecialCharacters.test(AMUrl)) {\r\n                        AMUrl = AMUrl.replace(\/\\?\/g, \"%253F\").replace(\/\\\u0026\/g, \"%26\").replace(\/\\=\/g, \"%3D\");\r\n                    } else {\r\n                        AMUrl = AMUrl.replace(\/\\?.*\/g, \"\");\r\n                    }\r\n                    break;\r\n                case \u0027image\u0027:\r\n                    AMUrl = this.getPrefixUrl() + \u0027\/IMAGE\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n                    break;\r\n            }\r\n\r\n        }\r\n        return !!AMUrl ? AMUrl : false;\r\n    },\r\n    init: function () {\r\n        if (this.isActive \u0026\u0026 this.pid \u0026\u0026 this.subscriberId) {\r\n            var transform = ClickTaleSettings.DOM.Transform = ClickTaleSettings.DOM.Transform || [];\r\n            transform.push({\r\n                rule: \u0027link[href][rel*=\"stylesheet\"]\u0027,\r\n                attr: \"href\",\r\n                transform: function (value, node) {\r\n                    if (value.indexOf(\u0027fonts.googleapis.com\u0027) == -1) {\r\n                        return ClickTaleSettings.PTC.AssetManager.getFullURL(\u0027css\u0027, node.href);\r\n                    }\r\n                    return value;\r\n                }\r\n            });\r\n            if (this.isNeedForImg) {\r\n                transform.push({\r\n                    rule: \u0027img[src]\u0027,\r\n                    attr: \"src\",\r\n                    transform: function (value, node) {\r\n                        return ClickTaleSettings.PTC.AssetManager.getFullURL(\u0027img\u0027, node.src);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n};\r\nClickTaleSettings.PTC.AssetManager.init();\r\n\r\nClickTaleSettings.PTC.ConfigChangeMonitor = function () {\r\n    var excludeBothArray = [];\r\n\r\n    ClickTaleSettings.ChangeMonitor = {\r\n        Enable: ClickTaleSettings.PTC.EnableChangeMonitor,\r\n        \/\/ Roots: [document.body],\r\n        Exclude: {\r\n            ChildNodes: [],\r\n            Attributes: []\r\n        }\r\n\r\n    }\r\n\r\n    var exclude = ClickTaleSettings.ChangeMonitor.Exclude;\r\n    if (excludeBothArray.length \u003e 0) {\r\n        Array.prototype.push.apply(exclude.ChildNodes, excludeBothArray);\r\n        Array.prototype.push.apply(exclude.Attributes, excludeBothArray);\r\n    }\r\n\r\n    function insertIntoBoth(selector) {\r\n        exclude.ChildNodes.push(selector);\r\n        exclude.Attributes.push(selector);\r\n    }\r\n\r\n    \/\/ if (document.location.pathname === \u0027\/\u0027) {\r\n    \/\/     insertIntoBoth(\"selector\");\r\n    \/\/ }\r\n\r\n    if (typeof window.ClickTaleCMSelector === \u0027string\u0027 \u0026\u0026 window.ClickTaleCMSelector != \u0027\u0027) {\r\n        try {\r\n            var domNodes = document.querySelector(ClickTaleCMSelector);\r\n            insertIntoBoth(ClickTaleCMSelector);\r\n        } catch (err) {\r\n            if (typeof ClickTaleNote === \u0027function\u0027) {\r\n                ClickTaleNote(\u0027Bad CM selector: \u0027 + encodeURIComponent(ClickTalePIISelector));\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nClickTaleSettings.PTC.doOnlyWhen = function (toDoHandler, toCheckHandler, interval, times, failHandler) {\r\n    if ((!toDoHandler) || (!toCheckHandler)) return;\r\n    if (typeof interval == \"undefined\") interval = 100;\r\n    if (typeof times == \"undefined\") times = 10;\r\n    if (--times \u003c 0) {\r\n        if (typeof failHandler === \u0027function\u0027) {\r\n            failHandler();\r\n        }\r\n        return;\r\n    }\r\n    if (toCheckHandler()) {\r\n        toDoHandler();\r\n        return;\r\n    }\r\n    setTimeout(function () {\r\n        ClickTaleSettings.PTC.doOnlyWhen(toDoHandler, toCheckHandler, interval, times, failHandler);\r\n    }, interval);\r\n};\r\n\r\nfunction ClickTaleOnRecording() {\r\n\r\n    (function () {\r\n        function init() {\r\n            var uxaGet = _uxa.push([\"getSessionData\"]);\r\n            if (uxaGet \u0026\u0026 uxaGet.projectId) {\r\n                var pid = uxaGet.projectId;\r\n                var uu = uxaGet.userId;\r\n                var sn = uxaGet.sessionNumber;\r\n                var pvid = uxaGet.pageNumber;\r\n                if (pid \u0026\u0026 uu \u0026\u0026 sn \u0026\u0026 pvid) {\r\n                    var intLink = \"https:\/\/app.contentsquare.com\/quick-playback\/index.html?pid=\" + pid + \"\u0026uu=\" + uu + \"\u0026sn=\" + sn + \"\u0026pvid=\" + pvid;\r\n                    window.ClicktaleReplayLink = function () {\r\n                        return intLink;\r\n                    }\r\n                    if (window.CS_CONF) {\r\n                        CS_CONF.replaylink = intLink;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function callback(context) {\r\n            if (!disableCallback) {\r\n                disableCallback = true;\r\n                init(context);\r\n            }\r\n        }\r\n        var disableCallback = false;\r\n        window._uxa = window._uxa || [];\r\n        _uxa.push([\u0027afterPageView\u0027, callback]);\r\n    })();\r\n\r\n}\r\n\r\n\/\/ End of user-defined pre WR code\r\n\r\n\r\nvar isHttps = document.location.protocol == \u0027https:\u0027,\r\n\tscriptSource = window.ClickTaleScriptSource,\r\n\tpccSource = scriptSource;\r\n\r\nif (!scriptSource) {\r\n\twindow.ClickTaleScriptSource = isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/www\/\u0027;\r\n}\r\n\r\n\r\nif(!ClickTaleGlobal.init.pccRequested) {\r\n\t\tvar pccSrc = pccSource ? pccSource : (isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/pcc\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/pcc\/\u0027);\r\n\t    pccSrc += \u002770ae08c9-d6c8-4bc7-910d-b098d8316158.js?DeploymentConfigName=Release_R17.0\u0026Version=1\u0027;\r\n\t\t\tvar pccScriptElement = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\tpccScriptElement.type = \"text\/javascript\";\r\n\tpccScriptElement.crossOrigin = \"anonymous\";\r\n\t\tpccScriptElement.async = true;\r\n\t\tif(ClickTaleGlobal.scripts.sri \u0026\u0026 ClickTaleGlobal.scripts.sri.hashes){\n        pccScriptElement.integrity = ClickTaleGlobal.scripts.sri.hashes.pcc;\n        pccScriptElement.src = ClickTaleGlobal.scripts.sri.path + \"pcc.js\";\n\t}else {\n       pccScriptElement.src = pccSrc;\n    }\n\t\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(pccScriptElement);\n\t\tClickTaleGlobal.init.pccRequested = true;\r\n}\r\n\t\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=6, \r\n\t\tRatio=0.5, \r\n\t\tPartitionPrefix=\"www27\",\r\n\t\tSubsId=233358;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\t\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\twindow._uxa = window._uxa || [];\r\n\r\nif (document.location.pathname.toLowerCase().indexOf(\u0027shop\/petcoinsuranceview\u0027) \u003e -1 ||\r\n    document.location.pathname.toLowerCase().indexOf(\u0027insurance\/d2c\u0027) \u003e -1) {\r\n    window._uxa.push([\u0027setPath\u0027, document.location.pathname + \u0027?__PetcoInsurance\u0027]);\r\n} else if (document.location.pathname.toLowerCase().indexOf(\u0027\/shop\/singleshipmentordersummaryview\u0027) \u003e -1 \u0026\u0026 document.location.search.indexOf(\u0027PetcoCheckForUniqueEmail\u0027) \u003e -1) {\r\n    window._uxa.push([\u0027setQuery\u0027, \u0027?__ShippingInformation\u0027]);\r\n}\r\n\r\nif (typeof ClickTaleSetAllSensitive === \"function\") {\r\n    ClickTaleSetAllSensitive();\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.InitFuncs = window.ClickTaleSettings.PTC.InitFuncs || [];\r\nwindow.ClickTaleSettings.PTC.InitFuncs.push(function () {\r\n    var pcc = document.querySelector(\u0027script[src*=\"clicktale\"][src*=\"pcc\"]\u0027);\r\n    if (pcc) {\r\n        var versionmatch = pcc.src.match(\/DeploymentConfigName=(.+)\/i);\r\n        if (versionmatch \u0026\u0026 typeof ClickTaleExec === \u0027function\u0027) {\r\n            ClickTaleExec(\"console.info(\u0027\" + versionmatch[0] + \"\u0027);\");\r\n            ClickTaleEvent(\"Config: \" + versionmatch[1].replace(\/\\\u0026.+\/, \u0027\u0027));\r\n        }\r\n    }\r\n});\r\n\r\nfunction doUpload() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n        ClickTaleUploadPageNow();\r\n        window.ClickTaleSettings.PTC.UploadPageHappened = true;\r\n    };\r\n};\r\n\r\nfunction isReadyToRecord() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n\r\n        if (document.location.href.toLowerCase().indexOf(\"www.petco.com\/shop\/petcoinsuranceview\") \u003e -1) { \/\/SUP-1811\r\n            if (document.getElementById(\u0027root\u0027)) {\r\n                return !!(document.querySelectorAll(\u0027#root \u003e *\u0027).length \u003e 0);\r\n            }\r\n        }\r\n        if (document.location.href.indexOf(\"shop\/OrderItemDisplay\") \u003e -1) { \/\/PET-134\r\n            return !!document.querySelector(\u0027#cart2_rr\u0027);\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\nif (typeof ClickTaleDelayUploadPage === \u0027function\u0027) {\r\n    ClickTaleDelayUploadPage();\r\n\r\n    window.ClickTaleSettings.PTC.doOnlyWhen(doUpload, isReadyToRecord, 1000, 6, doUpload);\r\n\r\n    var initFuncs = window.ClickTaleSettings.PTC.InitFuncs;\r\n    for (var i = 0, initLen = initFuncs.length; i \u003c initLen; i++) {\r\n        if (typeof initFuncs[i] === \u0027function\u0027) {\r\n            initFuncs[i]();\r\n        }\r\n    }\r\n}\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    \r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\t\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\t\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\tvar wrScript = ClickTaleCreateDOMElement(\"script\");\r\n\twrScript.crossOrigin = \"anonymous\";\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\twrScript.async = true;\r\n\t\tif(ClickTaleGlobal.scripts.sri \u0026\u0026 ClickTaleGlobal.scripts.sri.hashes){\n        wrScript.integrity = ClickTaleGlobal.scripts.sri.hashes.wr;\n        wrScript.src = ClickTaleGlobal.scripts.sri.path + \"wr.js\";\n\t}else {\n        wrScript.src = window.ClickTaleScriptSource + \u0027latest-WR110.js\u0027;\r\n    }\r\n\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar ctVEconfig={VE_BASE_URL:\"https:\/\/ve-cec-na1.app.clicktale.com\/\",VE_PROXY_BASE_URL:\"https:\/\/vep-cec-na1.app.clicktale.com\/\"};!function(){try{var e=window.chrome,t=window.navigator\u0026\u0026window.navigator.vendor;null!=e\u0026\u0026\"Google Inc.\"===t\u0026\u0026window.addEventListener\u0026\u0026addEventListener(\"message\",o,!1);var n=window.location.search.substring(window.location.search.indexOf(\"ctAdvancedSearch=\")).split(\"\u0026\")[0].split(\"=\");\"ctAdvancedSearch\"==n[0]\u0026\u0026\"true\"==n[1]\u0026\u0026c(\"ctAdvancedSearchModule\",ctVEconfig.VE_BASE_URL+\"client\/dist\/advancedSearchModule.js\")}catch(e){}function o(e){var t;try{t=JSON.parse(e.data)}catch(e){return}!1!==new RegExp(\"(app[.]clicktale[.]com)($|:)\").test(e.origin)\u0026\u0026(window.ct_ve_parent_window=e.source,\"CT_testRules\"==t.name\u0026\u0026(sessionStorage.setItem(\"CT_testRules\",!0),console.log((new Date).toJSON(),\"PostPTC: testRules \",sessionStorage.getItem(\"CT_testRules\")),window.ct_ve_parent_window.postMessage({name:\"testRulesRecieved\",params:{}},\"*\")),\"CTload_ve\"===t.function\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026(function(){console.log((new Date).toJSON(),\"PostPTC: start loading test rules\");var e=ClickTaleGetPID();c(\"ctTestRulesModule\",ctVEconfig.VE_BASE_URL+\"rulesEngineContent\/TestPCC\/\"+e,function(){sessionStorage.setItem(\"CT_testRules_Loaded\",!0),console.log((new Date).toJSON(),\"PostPTC: test rules loaded\")})}(),c(\"ctVisualEditorClientModule\",ctVEconfig.VE_BASE_URL+\"client\/dist\/veClientModule.js\")))}function c(e,t,n){var o=function(e){return document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",e):document.createElement(e)}(\"script\");o.setAttribute(\"type\",\"text\/javascript\"),o.setAttribute(\"id\",e),o.src=t,void 0!==n\u0026\u0026(o.onload=n),document.getElementById(e)||document.body.appendChild(o)}}();");
				document.body.appendChild(script);
			})();
	}		
if (ct_dispatcher.configName == 'Release_20201023')
{
	ClickTaleGlobal.init.configFoundPTC = true;
			(function(){
		var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2020 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 6\r\n\/\/ WR destination: www27\r\n\/\/ WR version: 17.0\r\n\/\/ Recording ratio: 0.5\r\n\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n\r\n\r\n\tClickTaleSettings.Integration = ClickTaleSettings.Integration || {};\r\n\tClickTaleSettings.Integration.ProjectType = 3;\r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\n{\n\tClickTaleCreateDOMElement = function(tagName)\n\t{\n\t\tif (document.createElementNS)\n\t\t{\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\n\t\t}\n\t\treturn document.createElement(tagName);\n\t}\n}\n\nif (typeof (ClickTaleAppendInHead) != \"function\")\n{\n\tClickTaleAppendInHead = function(element)\n\t{\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\n\t\tparent.appendChild(element);\n\t}\n}\n\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\n{\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\n\t{\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\n\t\tscript.text = code;\n\t\treturn script;\n\t}\n}\t\r\n\r\n\r\n\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\n\/\/PTC Code Version 10.3\r\n\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nClickTaleSettings.PTC = ClickTaleSettings.PTC || {};\r\nClickTaleSettings.Compression = ClickTaleSettings.Compression || {};\r\nClickTaleSettings.Compression.Method = function () {\r\n    return \"deflate\";\r\n};\r\nClickTaleSettings.Transport = ClickTaleSettings.Transport || {};\r\n(function () {\r\n    var Tr = ClickTaleSettings.Transport;\r\n    Tr.Legacy = false;\r\n    Tr.MaxConcurrentRequests = 5;\r\n    Tr.BigBuffer = 120000;\r\n})();\r\nClickTaleSettings.Protocol = ClickTaleSettings.Protocol || {};\r\nClickTaleSettings.Protocol.Method = \"ImpactRecorder\";\r\nif (window.Zone \u0026\u0026 typeof Zone[\u0027__symbol__\u0027] === \u0027function\u0027) {\r\n    ClickTaleSettings.PTC.restoreZonedXHR = function (xhr) {\r\n        if (xhr) {\r\n            var prot = Object.getPrototypeOf(xhr);\r\n            while (prot) {\r\n                for (var propName in prot) {\r\n                    var replacement;\r\n                    if (replacement = prot[Zone[\u0027__symbol__\u0027](propName)]) {\r\n                        xhr[propName] = replacement;\r\n                    }\r\n\r\n                }\r\n                prot = Object.getPrototypeOf(prot);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    window.ClickTaleOnXHRCreated = function (xhr) {\r\n        ClickTaleSettings.PTC.restoreZonedXHR(xhr);\r\n    }\r\n}\r\nif (document.readyState === \u0027complete\u0027) {\r\n    window.ClickTaleIncludedOnWindowLoad = true;\r\n}\r\nwindow.ClickTaleIncludedOnDOMReady = true;\r\nClickTaleSettings.PTC.Integrations = window.ClickTaleSettings.PTC.Integrations || [];\r\nwindow.ClickTaleSettings.PTC.EnableChangeMonitor = false;\r\nwindow.ClickTaleSettings.PTC.UploadPageHappened = false;\r\nwindow.ClickTaleSettings.PTC.IsMobile = false;\r\n\r\nvar pathName = window.location.pathname;\r\n\/\/PET-124\r\nvar staticIps = [\u0027142.44.139.37\u0027, \u0027144.217.75.65\u0027, \u0027166.70.84.176\u0027, \u0027208.51.62.230\u0027, \u002769.50.42.151\u0027, \u002750.77.83.173\u0027, \u0027209.150.72.20\u0027, \u002773.13.137.61\u0027, \u002769.195.220.238\u0027,\r\n    \u0027209.150.72.21\u0027, \u002713.56.137.180\u0027, \u002754.241.52.158\u0027, \u002734.224.255.169\u0027, \u002734.201.89.115\u0027, \u002735.168.141.9\u0027, \u002752.21.22.43\u0027, \u002735.168.185.185\u0027, \u002752.44.71.247\u0027, \u0027104.248.191.123\u0027\r\n];\r\n\r\nfor (var i = 1; i \u003c= 254; i++) {\r\n    staticIps.push(\"209.150.72.\" + i);\r\n    staticIps.push(\"209.150.73.\" + i);\r\n    if (i \u003e= 129) {\r\n        staticIps.push(\"69.195.220.\" + i);\r\n        staticIps.push(\"69.195.221.\" + i);\r\n    }\r\n}\r\n\r\n\r\nClickTaleSettings.CheckAgentSupport = function (f, v) {\r\n    if (v.t == v.ED) {\r\n        ClickTaleSettings.Compression.Async = false;\r\n    }\r\n    if (v.m) {\r\n        ClickTaleSettings.PTC.IsMobile = true;\r\n    }\r\n    if (!(v.t == v.IE \u0026\u0026 v.v == 10)) {\r\n        ClickTaleSettings.PTC.EnableChangeMonitor = true;\r\n        ClickTaleSettings.PTC.ConfigChangeMonitor();\r\n    }\r\n    var fv = f(v);\r\n    ClickTaleSettings.PTC.okToRunPCC = fv;\r\n    return fv;\r\n};\r\n\r\n\r\nfunction yyyymmdd(currentDate) {\r\n    var mm = currentDate.getMonth() + 1; \/\/ getMonth() is zero-based\r\n    var dd = currentDate.getDate();\r\n    mm = mm \u003c 10 ? \"0\" + mm : mm;\r\n    dd = dd \u003c 10 ? \"0\" + dd : dd;\r\n    return [currentDate.getFullYear(), mm, dd].join(\u0027\u0027); \/\/ padding\r\n};\r\n\r\nClickTaleSettings.PTC.startsWith = function (strToTest, str) {\r\n    return strToTest.lastIndexOf(str, 0) === 0;\r\n};\r\n\r\nClickTaleSettings.DOM = ClickTaleSettings.DOM || {};\r\n\r\n;\r\n(function () {\r\n    var selectorForBoth = \"#shipping-address-state\";\r\n    selectorForBoth += \u0027, p[class*=\\\u0027Address\\\u0027]\u0027; \/\/SUP-2270\r\n    var attrSelector = \u0027input#AccountNumber, input#SecurityCode\u0027\r\n    var onlyTextSelector = \u0027.row span.small, form[name=\"paymentWalletDisplayForm\"] \u003e div.row div.spacer-sm-bottom h4, form[name=\"paymentWalletDisplayForm\"] \u003e div.row div.spacer-sm-bottom p, \\\r\n    div#billing_summary strong, div#billing_summary div div, div#WC_OrderShippingBillingConfirmationPage_div_4 p strong, div#billing_summary strong, \\\r\n    div#billing_summary div, div#WC_CheckoutPaymentAndBillingAddressSummaryf_div_3_\u0027\r\n    onlyTextSelector += \u0027, .form-control, .account-tile account-payment, [Id^=\"addressDetails\"], .user-name strong, #ListName\u0027\r\n    var srcOnErrorSelectors = \u0027#a-sp-root-template [onerror*=\\\"chrome-extension\\:\\\/\\\/\\\"]\u0027;\r\n    \/\/ \/**\r\n    \/\/  *\r\n    \/\/  * @param {!string} value - attribute value || textContent\r\n    \/\/  * @param {!Node} node\r\n    \/\/  * @param {!string} rule - css selector\r\n    \/\/  * @param {!number} type - 0 - text, 1 - attribute\r\n    \/\/  * @returns {!string}\r\n    \/\/  *\/\r\n    \/\/ function transform(value, node, rule, type) {\r\n    \/\/     var reg = \/\\w|[^\\x00-\\x7F]\/g;\r\n    \/\/     return value.replace(reg, \"-\");\r\n    \/\/ }\r\n\r\n    ClickTaleSettings.DOM.PII = {\r\n        Text: [selectorForBoth, onlyTextSelector],\r\n        Attributes: [{\r\n                rule: selectorForBoth,\r\n                attr: \u0027value\u0027\r\n            },\r\n            {\r\n                rule: attrSelector,\r\n                attr: \u0027value\u0027\r\n            },\r\n            {\r\n                rule: srcOnErrorSelectors,\r\n                attr: \u0027src\u0027\r\n            },\r\n            {\r\n                rule: srcOnErrorSelectors,\r\n                attr: \u0027onerror\u0027\r\n            }\r\n        ] \/\/,\r\n        \/\/Transform: transform\r\n    };\r\n\r\n    \/**\r\n     *\r\n     * @param {!CSSStyleSheet} adoptedStyleSheets\r\n     *\/\r\n    function getSerializedNode(adoptedStyleSheets) {\r\n        var textArray = [];\r\n        adoptedStyleSheets.forEach(function (sheet) {\r\n            var rules = \/** @type{!CSSRuleList} *\/ (sheet.cssRules);\r\n            for (var i = 0; i \u003c rules.length; i++) {\r\n                var rule = rules[i];\r\n                if (rule \u0026\u0026 rule.cssText) {\r\n                    textArray.push(rule.cssText);\r\n                }\r\n            }\r\n        });\r\n        if (textArray.length) {\r\n            return {\r\n                nodeType: 1,\r\n                tagName: \"style\",\r\n                attributes: {\r\n                    \"data-addoptedCSS\": \"true\"\r\n                },\r\n                childNodes: [{\r\n                    \"nodeType\": 3,\r\n                    \"textContent\": textArray.join(\u0027\\r\\n\u0027)\r\n                }]\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    \/**\r\n     *\r\n     * @param {!(DocumentOrShadowRoot|Element)} root\r\n     *\/\r\n    function addSerializedNode(root, serializeAPI) {\r\n        var serializeNode, parentNode = root,\r\n            adoptedStyleSheets;\r\n        switch (root.nodeType) {\r\n            case 11:\r\n                if ((adoptedStyleSheets = \/** @type{!CSSStyleSheet} *\/ (root.adoptedStyleSheets)) \u0026\u0026 adoptedStyleSheets.length) {\r\n                    serializeNode = getSerializedNode(adoptedStyleSheets);\r\n                }\r\n                break;\r\n            case 1:\r\n                if (typeof root.getRootNode === \u0027function\u0027) {\r\n                    root = root.getRootNode();\r\n                    addSerializedNode(root, serializeAPI);\r\n                }\r\n                break;\r\n            case 9:\r\n                if ((adoptedStyleSheets = \/** @type{!CSSStyleSheet} *\/ (root.adoptedStyleSheets)) \u0026\u0026 adoptedStyleSheets.length) {\r\n                    serializeNode = getSerializedNode(adoptedStyleSheets);\r\n                    parentNode = document.head || document.documentElement;\r\n                }\r\n                break;\r\n        }\r\n        if (serializeNode \u0026\u0026 parentNode) {\r\n            serializeAPI.addChild(parentNode, null, serializeNode);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    ClickTaleSettings.DOM.Serializer = ClickTaleSettings.DOM.Serializer || {};\r\n\r\n    ClickTaleSettings.DOM.Serializer.OnAfterSerialize = function (serializeAPI) {\r\n        var allObservableRoots;\r\n        if (\r\n            \u0027adoptedStyleSheets\u0027 in Document.prototype \u0026\u0026\r\n            window.ClickTaleGlobal \u0026\u0026 ClickTaleGlobal.symbols \u0026\u0026\r\n            ClickTaleGlobal.symbols.rootsManager \u0026\u0026\r\n            typeof ClickTaleGlobal.symbols.rootsManager.getAllObservableRoots === \u0027function\u0027 \u0026\u0026\r\n            Array.isArray(allObservableRoots = \/** @type{!Array.\u003cDocumentOrShadowRoot|Element\u003e} *\/ (ClickTaleGlobal.symbols.rootsManager.getAllObservableRoots()))\r\n        ) {\r\n            allObservableRoots.forEach(function (root) {\r\n                addSerializedNode(root, serializeAPI);\r\n            });\r\n        }\r\n\r\n        \/\/SUP-971\r\n        \/\/in OnBeforeRewrite =\u003e rewriteApi.add\r\n        var dataStyledComponents = document.querySelectorAll(\u0027style[data-styled]\u0027);\r\n        if (!!dataStyledComponents) {\r\n            var cssRulesString = \u0027\u0027;\r\n            Array.prototype.forEach.call(dataStyledComponents, function (el, ind) {\r\n                if (!!el \u0026\u0026 el.sheet \u0026\u0026 (el.sheet.rules || el.sheet.cssRules)) {\r\n                    var cssRulesObj = !!el.sheet.rules ? el.sheet.rules : el.sheet.cssRules;\r\n                    for (var i in cssRulesObj) {\r\n                        if (cssRulesObj[i][\u0027cssText\u0027]) {\r\n                            cssRulesString += cssRulesObj[i][\u0027cssText\u0027] + \u0027 \u0027;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        var dataStyledComponents1 = document.querySelectorAll(\u0027style[data-emotion]\u0027);\r\n        if (!!dataStyledComponents1) {\r\n            var cssRulesString1 = \u0027\u0027;\r\n            Array.prototype.forEach.call(dataStyledComponents1, function (el, ind) {\r\n                if (!!el \u0026\u0026 el.sheet \u0026\u0026 (el.sheet.rules || el.sheet.cssRules)) {\r\n                    var cssRulesObj = !!el.sheet.rules ? el.sheet.rules : el.sheet.cssRules;\r\n                    for (var i in cssRulesObj) {\r\n                        if (cssRulesObj[i][\u0027cssText\u0027]) {\r\n                            cssRulesString1 += cssRulesObj[i][\u0027cssText\u0027] + \u0027 \u0027;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        serializeAPI.addChild(document.head, null, {\r\n            nodeType: 1,\r\n            tagName: \"style\",\r\n            attributes: {\r\n                \"style[data-styled]\": \"\"\r\n            },\r\n            childNodes: [{\r\n                \"nodeType\": 3,\r\n                \"textContent\": cssRulesString\r\n            }]\r\n        });\r\n\r\n        serializeAPI.addChild(document.head, null, {\r\n            nodeType: 1,\r\n            tagName: \"style\",\r\n            attributes: {\r\n                \"style[data-emotion]\": \"\"\r\n            },\r\n            childNodes: [{\r\n                \"nodeType\": 3,\r\n                \"textContent\": cssRulesString1\r\n            }]\r\n        });\r\n    }\r\n\r\n\r\n    var locationRules = [{\r\n            selector: \u0027address span\u0027,\r\n            Attributes: [\u0027\u0027],\r\n            Text: true,\r\n            location: {\r\n                prop: \u0027href\u0027,\r\n                search: \/myAccountActivePage=shippingAddress\/i\r\n            }\r\n        }, {\r\n            selector: \u0027#WC_UserRegistrationUpdateForm_FormInput_phoneNum_In_Register_1, #WC_UserRegistrationUpdateForm_FormInput_email2_In_Register_1, #WC_UserRegistrationUpdateForm_FormInput_Address1_In_Register_1, #WC_UserRegistrationUpdateForm_FormInput_Address2_In_Register_1, #WC_UserRegistrationUpdateForm_FormInput_City_In_Register_1, #WC_UserRegistrationUpdateForm_FormInput_State_In_Register_1, #WC_UserRegistrationUpdateForm_FormInput_ZipCode_In_Register_1\u0027,\r\n            Attributes: [\u0027value\u0027],\r\n            Text: true,\r\n            location: {\r\n                prop: \u0027pathname\u0027,\r\n                search: \/UserRegistrationForm\/i\r\n            }\r\n        },\r\n        {\r\n            selector: \u0027.account-payment strong, .account-payment li, .account-payment address, #ShippingAddressContainer div\u0027,\r\n            Attributes: [\u0027\u0027],\r\n            Text: true,\r\n            location: {\r\n                prop: \u0027pathname\u0027,\r\n                search: \/shop\\\/PaymentWalletView\/i\r\n            }\r\n        },\r\n        {\r\n            selector: \u0027#ncrFrame iframe\u0027,\r\n            Attributes: [\u0027src\u0027],\r\n            Text: true,\r\n            location: {\r\n                prop: \u0027pathname\u0027,\r\n                search: \/shop\\\/PaymentWalletView\/i\r\n            }\r\n        },\r\n        {\r\n            selector: \u0027.email\u0027,\r\n            Attributes: [\u0027\u0027],\r\n            Text: true,\r\n            location: {\r\n                prop: \u0027href\u0027,\r\n                search: \/myAccountActivePage=emailPreferences\/i\r\n            }\r\n        },\r\n        {\r\n            selector: \u0027.form-control-static\u0027,\r\n            Attributes: [\u0027\u0027],\r\n            Text: true,\r\n            location: {\r\n                prop: \u0027href\u0027,\r\n                search: \/myAccountActivePage=myAccount\/i\r\n            }\r\n        },\r\n        {\r\n            selector: \u0027.form-control-static\u0027,\r\n            Attributes: [\u0027\u0027],\r\n            Text: true,\r\n            location: {\r\n                prop: \u0027href\u0027,\r\n                search: \/LogonForm\/i\r\n            }\r\n        },\r\n        {\r\n            selector: \u0027#petcoShippingAddressDisplayArea \u003e .container \u003e .row \u003e .col-7 \u003e p, #petcoShippingAddressDisplayArea \u003e .container \u003e .row \u003e .col-7 \u003e p \u003e strong, .customer-address-col2 \u003e p, .customer-address-col2 \u003e p \u003e strong, #petcoGuestShippingAddressDisplayArea \u003e .container \u003e .row \u003e .col-7 \u003e p, #petcoGuestShippingAddressDisplayArea \u003e .container \u003e .row \u003e .col-7 \u003e p \u003e strong, ul.address-picklist.dropdown-menu\u003eli\u003ea, ul.address-picklist.dropdown-menu\u003eli\u003ea\u003eb, #actualAddressDetails, #suggestedAddressDetails, #AllPartialMatches, #payPal\u003e.row p, #paypal\u003e.row p, #AptOrStreetMatchesContent [id^=\"AptOrStreetMatches_\"] .row .col-9\u0027,\r\n            Attributes: [\u0027\u0027],\r\n            Text: true,\r\n            location: {\r\n                prop: \u0027href\u0027,\r\n                search: \/SingleShipmentOrderSummaryView\/i\r\n            }\r\n        },\r\n        {\r\n            selector: \u0027main \u003e div \u003e div \u003e section:nth-child(2) \u003e div \u003e div \u003e div \u003e form \u003e div \u003e div div, div \u003e div \u003e div:nth-child(3) \u003e div \u003e div \u003e div \u003e p, main \u003e div \u003e div \u003e div \u003e p, main \u003e div \u003e div \u003e div \u003e div \u003e div \u003e p\u0027,\r\n            Attributes: [\u0027\u0027],\r\n            Text: true,\r\n        }\r\n    ];\r\n\r\n\r\n    locationRules.forEach(function (rule) {\r\n        if (rule.location) {\r\n            var prop = rule.location.prop;\r\n            var search = rule.location.search;\r\n            if (search.test(location[prop])) {\r\n                var Attributes = rule.Attributes;\r\n                var selector = rule.selector;\r\n                var Text = rule.Text;\r\n                var PII = ClickTaleSettings.DOM.PII;\r\n                if (Text) {\r\n                    PII.Text.push(selector);\r\n                }\r\n                if (Array.isArray(Attributes)) {\r\n                    Attributes.forEach(function (attr) {\r\n                        PII.Attributes.push({\r\n                            rule: selector,\r\n                            attr: attr\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    });\r\n})();\r\n\r\n\r\n\r\n;\r\n(function () {\r\n    if (typeof window.ClickTalePIISelector === \u0027string\u0027 \u0026\u0026 ClickTalePIISelector != \u0027\u0027) {\r\n        try {\r\n            var domNodes = document.querySelector(ClickTalePIISelector);\r\n            var PII = ClickTaleSettings.DOM.PII;\r\n            PII.Text.push(ClickTalePIISelector);\r\n            PII.Attributes.push({\r\n                rule: ClickTalePIISelector,\r\n                attr: \"value\"\r\n            });\r\n        } catch (err) {\r\n            if (typeof ClickTaleNote === \u0027function\u0027) {\r\n                ClickTaleNote(\u0027Bad PII selector: \u0027 + encodeURIComponent(ClickTalePIISelector));\r\n            }\r\n        }\r\n    }\r\n})();\r\n\r\nClickTaleSettings.PTC.AssetManager = {\r\n    isActive: true,\r\n    isNeedForImg: false,\r\n    subscriberId: \u0027233358\u0027,\r\n    pid: \u00276\u0027,\r\n    storageUrl: \u0027https:\/\/s3.amazonaws.com\/nv-p1-s3-assets-01\/\u0027,\r\n    prefixSpecialCharacters: false,\r\n    getPrefixUrl: function () {\r\n        return this.storageUrl + this.subscriberId + \u0027\/\u0027 + this.pid;\r\n    },\r\n    getFullURL: function (type, url) {\r\n        var AMUrl = \u0027\u0027;\r\n        if (url) {\r\n            switch (type) {\r\n                case \u0027css\u0027:\r\n                    AMUrl = this.getPrefixUrl() + \u0027\/CSS\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n                    if (this.prefixSpecialCharacters \u0026\u0026 this.prefixSpecialCharacters.test(AMUrl)) {\r\n                        AMUrl = AMUrl.replace(\/\\?\/g, \"%253F\").replace(\/\\\u0026\/g, \"%26\").replace(\/\\=\/g, \"%3D\");\r\n                    } else {\r\n                        AMUrl = AMUrl.replace(\/\\?.*\/g, \"\");\r\n                    }\r\n                    break;\r\n                case \u0027image\u0027:\r\n                    AMUrl = this.getPrefixUrl() + \u0027\/IMAGE\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n                    break;\r\n            }\r\n\r\n        }\r\n        return !!AMUrl ? AMUrl : false;\r\n    },\r\n    init: function () {\r\n        if (this.isActive \u0026\u0026 this.pid \u0026\u0026 this.subscriberId) {\r\n            var transform = ClickTaleSettings.DOM.Transform = ClickTaleSettings.DOM.Transform || [];\r\n            transform.push({\r\n                rule: \u0027link[href][rel*=\"stylesheet\"]\u0027,\r\n                attr: \"href\",\r\n                transform: function (value, node) {\r\n                    if (value.indexOf(\u0027fonts.googleapis.com\u0027) == -1) {\r\n                        return ClickTaleSettings.PTC.AssetManager.getFullURL(\u0027css\u0027, node.href);\r\n                    }\r\n                    return value;\r\n                }\r\n            });\r\n            if (this.isNeedForImg) {\r\n                transform.push({\r\n                    rule: \u0027img[src]\u0027,\r\n                    attr: \"src\",\r\n                    transform: function (value, node) {\r\n                        return ClickTaleSettings.PTC.AssetManager.getFullURL(\u0027img\u0027, node.src);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n};\r\nClickTaleSettings.PTC.AssetManager.init();\r\n\r\nClickTaleSettings.LocRefRew = function (url) {\r\n    if (url.toLowerCase().indexOf(\u0027shop\/petcoinsuranceview\u0027) \u003e -1) {\r\n        url = url + \u0027?__PetcoInsurance\u0027;\r\n        return url;\r\n    }\r\n    return url;\r\n}\r\nClickTaleSettings.LocationRewriter = ClickTaleSettings.LocRefRew;\r\nClickTaleSettings.ReferrerRewriter = ClickTaleSettings.LocRefRew;\r\n\r\nClickTaleSettings.PTC.ConfigChangeMonitor = function () {\r\n    var excludeSelectors = \".primary-nav-drawer, form #aria-context, form #aria-selection-event\"\r\n    excludeSelectors += \", iframe[ctdep-id=\\\"dj_history\\\"], form #aria-context, form #aria-selection-event, form #aria-context, form #aria-selection-event\"\r\n\r\n    var excludeBothArray = [excludeSelectors];\r\n\r\n    ClickTaleSettings.ChangeMonitor = {\r\n        Enable: ClickTaleSettings.PTC.EnableChangeMonitor,\r\n        \/\/ Roots: [document.body],\r\n        Exclude: {\r\n            ChildNodes: [],\r\n            Attributes: []\r\n        }\r\n\r\n    }\r\n\r\n    var exclude = ClickTaleSettings.ChangeMonitor.Exclude;\r\n    if (excludeBothArray.length \u003e 0) {\r\n        Array.prototype.push.apply(exclude.ChildNodes, excludeBothArray);\r\n        Array.prototype.push.apply(exclude.Attributes, excludeBothArray);\r\n    }\r\n\r\n    function insertIntoBoth(selector) {\r\n        exclude.ChildNodes.push(selector);\r\n        exclude.Attributes.push(selector);\r\n    }\r\n\r\n    \/\/ if (document.location.pathname === \u0027\/\u0027) {\r\n    \/\/     insertIntoBoth(\"selector\");\r\n    \/\/ }\r\n\r\n    if (pathName.indexOf(\u0027petcostore\/product\u0027) \u003e -1) {\r\n        window.ClickTaleSettings.ChangeMonitor.AutoExclude = {\r\n            Enable: true,\r\n            Repeats: 50,\r\n            Interval: 200\r\n        }\r\n    } else {\r\n        window.ClickTaleSettings.ChangeMonitor.AutoExclude = {\r\n            Enable: true,\r\n            Repeats: 10,\r\n            Interval: 200\r\n        }\r\n\r\n    }\r\n\r\n    if (typeof window.ClickTaleCMSelector === \u0027string\u0027 \u0026\u0026 window.ClickTaleCMSelector != \u0027\u0027) {\r\n        try {\r\n            var domNodes = document.querySelector(ClickTaleCMSelector);\r\n            insertIntoBoth(ClickTaleCMSelector);\r\n        } catch (err) {\r\n            if (typeof ClickTaleNote === \u0027function\u0027) {\r\n                ClickTaleNote(\u0027Bad CM selector: \u0027 + encodeURIComponent(ClickTalePIISelector));\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nClickTaleSettings.PTC.doOnlyWhen = function (toDoHandler, toCheckHandler, interval, times, failHandler) {\r\n    if ((!toDoHandler) || (!toCheckHandler)) return;\r\n    if (typeof interval == \"undefined\") interval = 1000;\r\n    if (typeof times == \"undefined\") times = 10;\r\n    if (--times \u003c 0) {\r\n        if (typeof failHandler === \u0027function\u0027) {\r\n            failHandler();\r\n        }\r\n        return;\r\n    }\r\n    if (toCheckHandler()) {\r\n        toDoHandler();\r\n        return;\r\n    }\r\n    setTimeout(function () {\r\n        ClickTaleSettings.PTC.doOnlyWhen(toDoHandler, toCheckHandler, interval, times, failHandler);\r\n    }, interval);\r\n};\r\n\r\nfunction ClickTaleOnRecording() {\r\n\r\n    \/\/Start CAP Integrations\r\n    if (!window.ClickTaleSettings.PTC.IntegrationsReady) {\r\n        window.ClickTaleSettings.PTC.IntegrationsReady = true;\r\n\r\n        (function () {\r\n\r\n            function init(context) {\r\n\r\n                function sendToCS(csTypeVendorPrefix, csKey, csValue, csEventType, csPV) {\r\n                    csKey = csTypeVendorPrefix + csKey;\r\n\r\n                    window._uxa = window._uxa || [];\r\n                    _uxa.push([\"trackDynamicVariable\", {\r\n                        key: csKey,\r\n                        value: csValue\r\n                    }]);\r\n\r\n                    if (csEventType === \"etr\") {\r\n                        if (window.ClickTaleIsSavedRecording \u0026\u0026 ClickTaleIsSavedRecording() === false) {\r\n                            ClickTaleEventTrigger(\"@ET@ \" + csKey);\r\n                        }\r\n                    } else if (csEventType === \"reg\") {\r\n                        _uxa.push([\"trackPageEvent\", csKey + \" | \" + csValue]);\r\n                    }\r\n\r\n                    if (csPV) {\r\n                        _uxa.push([\"trackPageview\", window.location.pathname + \"?\" + csPV]);\r\n                    }\r\n                }\r\n\r\n                function generateReplayLink(pvNum) {\r\n                    pvNum = pvNum || 0;\r\n\r\n                    var uxaGet = _uxa.push([\"getSessionData\"]);\r\n                    if (uxaGet \u0026\u0026 uxaGet.projectId) {\r\n                        var pid = uxaGet.projectId;\r\n                        var uu = uxaGet.userId;\r\n                        var sn = uxaGet.sessionNumber;\r\n                        var pvid = uxaGet.pageNumber - pvNum;\r\n\r\n                        if (pid \u0026\u0026 uu \u0026\u0026 sn \u0026\u0026 pvid) {\r\n                            var intLink = \"https:\/\/app.contentsquare.com\/quick-playback\/index.html?pid=\" + pid + \"\u0026uu=\" + uu + \"\u0026sn=\" + sn + \"\u0026pvid=\" + pvid;\r\n                            return intLink;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                \/*\r\n                 *Name: LivePerson CAP Integration\r\n                 *Version: 1.14\r\n                 *Required Shared Components: ClickTaleOnRecording, Self Invoking function, _uxa afterPageView callback, sendToCS, generateReplayLink\r\n                 *\/\r\n\r\n                var campaignDisplayed = false;\r\n                var chatStarted = false;\r\n                var chatEnded = false;\r\n\r\n                function liveEngageCallback(e) {\r\n\r\n                    var tvp = \"CH_LP_\";\r\n\r\n                    if (e \u0026\u0026 (e.state || e.state === 0) \u0026\u0026 e.engagementName) {\r\n                        var state = e.state;\r\n                        var engagementName = e.engagementName;\r\n                        var skill = e.skill;\r\n                        if (!skill) {\r\n                            skill = \"No skill\";\r\n                        }\r\n\r\n                        if (state === 0 \u0026\u0026 !campaignDisplayed) {\r\n                            campaignDisplayed = true;\r\n\r\n                            sendToCS(tvp, \"Campaign Displayed\", engagementName, 0, \"cs_liveperson=campaign_displayed_\" + engagementName);\r\n                        }\r\n\r\n                        if (state === \"chatting\" \u0026\u0026 !chatStarted) {\r\n                            chatStarted = true;\r\n\r\n                            sendToCS(tvp, \"Chat Started\", engagementName, \"etr\", \"cs_liveperson=chat_started_\" + engagementName);\r\n                            sendToCS(tvp, \"Skill\", skill);\r\n\r\n                            if (window.ClickTaleIsRecording \u0026\u0026 ClickTaleIsRecording()) {\r\n                                ClickTaleStop();\r\n                                ClickTaleUploadPage();\r\n                                ClickTaleLogical(document.location.href);\r\n                            }\r\n\r\n                            if (lpTag.sdes) {\r\n                                var intLink = generateReplayLink();\r\n                                if (intLink) {\r\n                                    lpTag.sdes = lpTag.sdes || [];\r\n                                    lpTag.sdes.push({\r\n                                        \"type\": \"ctmrinfo\",\r\n                                        \"info\": {\r\n                                            \"ctype\": intLink\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                        if (state === \"ended\" \u0026\u0026 !chatEnded) {\r\n                            chatEnded = true;\r\n\r\n                            sendToCS(tvp, \"Chat Ended\", engagementName, 0, \"cs_liveperson=chat_ended_\" + engagementName);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                function startLPIntegration() {\r\n                    setTimeout(function () {\r\n\r\n                        if (lpTag.events \u0026\u0026 lpTag.events.bind) {\r\n                            lpTag.events.bind({\r\n                                appName: \"*\",\r\n                                eventName: \"*\",\r\n                                async: true,\r\n                                triggerOnce: false,\r\n                                func: liveEngageCallback\r\n                            });\r\n                        }\r\n\r\n                    }, 500);\r\n                };\r\n\r\n                var integrationLPstarted = false;\r\n\r\n                var lpTag = window.lpTag;\r\n                if (lpTag) {\r\n                    startLPIntegration();\r\n                } else {\r\n                    Object.defineProperty(window, \"lpTag\", {\r\n                        configurable: true,\r\n                        get: function () {\r\n                            return lpTag;\r\n                        },\r\n                        set: function (n) {\r\n                            lpTag = n;\r\n                            if (!integrationLPstarted) {\r\n                                integrationLPstarted = true;\r\n                                startLPIntegration();\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                \/\/End LivePerson CAP Integration\r\n\r\n\r\n                \/*\r\n                 *Name: Medallia CAP Integration\r\n                 *Version: 1.15\r\n                 *Required Shared Components: ClickTaleOnRecording, Self Invoking function, _uxa afterPageView callback, sendToCS, generateReplayLink\r\n                 *\/\r\n                function startMDIntegration() {\r\n\r\n                    var tvp = \"FB_MD_\";\r\n\r\n                    window.addEventListener(\"MDigital_Feedback_Button_Clicked\", function (e) {\r\n                        if (e \u0026\u0026 e.detail \u0026\u0026 e.detail.Form_ID) {\r\n                            var surveyID = e.detail.Form_ID.toString();\r\n\r\n                            sendToCS(tvp, \"Feedback Button Clicked\", \"Survey ID : \" + surveyID, 0, \"cs_medallia=feedback_button_clicked_\" + surveyID);\r\n                        }\r\n                    });\r\n\r\n                    window.addEventListener(\"MDigital_Invite_Displayed\", function (e) {\r\n                        if (e \u0026\u0026 e.detail \u0026\u0026 e.detail.Form_ID) {\r\n                            var surveyID = e.detail.Form_ID.toString();\r\n\r\n                            sendToCS(tvp, \"Feedback Invite Displayed\", \"Survey ID : \" + surveyID, 0, \"cs_medallia=feedback_invite_displayed_\" + surveyID);\r\n                        }\r\n                    });\r\n\r\n                    window.addEventListener(\"MDigital_Invite_Accepted\", function (e) {\r\n                        if (e \u0026\u0026 e.detail \u0026\u0026 e.detail.Form_ID) {\r\n                            var surveyID = e.detail.Form_ID.toString();\r\n\r\n                            sendToCS(tvp, \"Feedback Invite Accepted\", \"Survey ID : \" + surveyID, 0, \"cs_medallia=feedback_invite_accepted_\" + surveyID);\r\n                        }\r\n                    });\r\n\r\n                    window.addEventListener(\"MDigital_Submit_Feedback\", function (e) {\r\n                        if (e \u0026\u0026 e.detail) {\r\n                            var ed = e.detail;\r\n                            if (ed.Feedback_UUID \u0026\u0026 ed.Form_ID \u0026\u0026 ed.Form_Type) {\r\n                                var surveyID = ed.Form_ID.toString();\r\n                                var feedbackUUID = ed.Feedback_UUID;\r\n                                var formType = ed.Form_Type;\r\n\r\n                                sendToCS(tvp, \"Feedback Submitted\", \"Survey ID : \" + surveyID, \"etr\", \"cs_medallia=feedback_submitted_\" + surveyID);\r\n                                sendToCS(tvp, \"Feedback UUID\", feedbackUUID);\r\n                                sendToCS(tvp, \"Feedback Form Type\", formType);\r\n                            }\r\n\r\n                            if (ed.Content) {\r\n                                for (var i = 0; i \u003c ed.Content.length; i++) {\r\n                                    if (ed.Content[i].type.toLowerCase().indexOf(\"grading\") \u003e -1 ||\r\n                                        ed.Content[i].type.toLowerCase().indexOf(\"nps\") \u003e -1) {\r\n                                        var value = ed.Content[i].value;\r\n                                        if (value) {\r\n                                            var rating = parseInt(value);\r\n                                            var ratingName = ed.Content[i].unique_name;\r\n\r\n                                            if (typeof rating === \"number\") {\r\n                                                if (ed.Content[i].type.toLowerCase().indexOf(\"nps\") \u003e -1) {\r\n                                                    sendToCS(tvp, \"NPS Rating \" + ratingName, rating);\r\n                                                } else {\r\n                                                    sendToCS(tvp, \"Rating \" + ratingName, rating);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    var intLink = generateReplayLink();\r\n                    if (intLink) {\r\n                        window.ClickTale.KampyleLink = intLink;\r\n                    }\r\n\r\n                }\r\n\r\n                var integrationMDStarted = false;\r\n\r\n                var MDIGITAL = window.MDIGITAL;\r\n                if (MDIGITAL) {\r\n                    startMDIntegration();\r\n                } else {\r\n                    Object.defineProperty(window, \"MDIGITAL\", {\r\n                        configurable: true,\r\n                        get: function () {\r\n                            return MDIGITAL;\r\n                        },\r\n                        set: function (n) {\r\n                            MDIGITAL = n;\r\n                            if (!integrationMDStarted) {\r\n                                integrationMDStarted = true;\r\n                                startMDIntegration();\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                \/\/Medallia CAP Integration End\r\n\r\n\r\n                \/*\r\n                 *Name: Blue Triangle CAP Integration\r\n                 *Version: 1.14\r\n                 *Required Shared Components: ClickTaleOnRecording, Self Invoking function, _uxa afterPageView callback, sendToCS, generateReplayLink\r\n                 *\/\r\n                if (ClickTaleIsSavedRecording()) {\r\n\r\n                    function startBTintegration() {\r\n                        setTimeout(function () {\r\n\r\n                            var tvp = \"APM_BT_\";\r\n\r\n                            var intLink = generateReplayLink();\r\n                            if (intLink) {\r\n                                var uxaGet = _uxa.push([\"getSessionData\"]);\r\n                                var csPID = uxaGet.projectId;\r\n\r\n                                if (bttUT.ctGif) {\r\n                                    bttUT.ctGif({\r\n                                        csPID: csPID,\r\n                                        csReplayURL: intLink\r\n                                    });\r\n                                }\r\n\r\n                                if (bttUT.sessionID) {\r\n                                    sendToCS(tvp, \"SessionID\", bttUT.sessionID);\r\n                                }\r\n                            }\r\n\r\n                        }, 500);\r\n                    }\r\n\r\n                    var integrationBTstarted = false;\r\n\r\n                    var bttUT = window.bttUT;\r\n                    if (bttUT) {\r\n                        startBTintegration();\r\n                    } else {\r\n                        Object.defineProperty(window, \"bttUT\", {\r\n                            configurable: true,\r\n                            get: function () {\r\n                                return bttUT;\r\n                            },\r\n                            set: function (n) {\r\n                                bttUT = n;\r\n                                if (!integrationBTstarted) {\r\n                                    integrationBTstarted = true;\r\n                                    startBTintegration();\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                \/\/Blue Triangle CAP Integration End\r\n            }\r\n\r\n            function callback(context) {\r\n                if (!disableCallback) {\r\n                    disableCallback = true;\r\n                    init(context);\r\n\r\n                    if (window.CS_CONF) {\r\n                        CS_CONF.integrations = CS_CONF.integrations || [];\r\n                        CS_CONF.integrations.push(\"LivePerson\");\r\n                        CS_CONF.integrations.push(\"Medallia\");\r\n                        CS_CONF.integrations.push(\"Blue Triangle\");\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            var disableCallback = false;\r\n\r\n            window._uxa = window._uxa || [];\r\n            _uxa.push([\"afterPageView\", callback]);\r\n        })();\r\n    }\r\n    \/\/End CAP Integrations\r\n};\r\n\r\n\/\/ End of user-defined pre WR code\r\n\r\n\r\nvar isHttps = document.location.protocol == \u0027https:\u0027,\r\n\tscriptSource = window.ClickTaleScriptSource,\r\n\tpccSource = scriptSource;\r\n\r\nif (!scriptSource) {\r\n\twindow.ClickTaleScriptSource = isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/www\/\u0027;\r\n}\r\n\r\n\r\nif(!ClickTaleGlobal.init.pccRequested) {\r\n\t\tvar pccSrc = pccSource ? pccSource : (isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/pcc\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/pcc\/\u0027);\r\n\t    pccSrc += \u002770ae08c9-d6c8-4bc7-910d-b098d8316158.js?DeploymentConfigName=Release_20201023\u0026Version=1\u0027;\r\n\t\t\tvar pccScriptElement = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\tpccScriptElement.type = \"text\/javascript\";\r\n\tpccScriptElement.crossOrigin = \"anonymous\";\r\n\t\tpccScriptElement.async = true;\r\n\t\tif(ClickTaleGlobal.scripts.sri \u0026\u0026 ClickTaleGlobal.scripts.sri.hashes){\n        pccScriptElement.integrity = ClickTaleGlobal.scripts.sri.hashes.pcc;\n        pccScriptElement.src = ClickTaleGlobal.scripts.sri.path + \"pcc.js\";\n\t}else {\n       pccScriptElement.src = pccSrc;\n    }\n\t\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(pccScriptElement);\n\t\tClickTaleGlobal.init.pccRequested = true;\r\n}\r\n\t\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=6, \r\n\t\tRatio=0.5, \r\n\t\tPartitionPrefix=\"www27\",\r\n\t\tSubsId=233358;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\t\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\twindow._uxa = window._uxa || [];\r\n\r\nif (document.location.pathname.toLowerCase().indexOf(\u0027shop\/petcoinsuranceview\u0027) \u003e -1 ||\r\n    document.location.pathname.toLowerCase().indexOf(\u0027insurance\/d2c\u0027) \u003e -1) {\r\n    window._uxa.push([\u0027setPath\u0027, document.location.pathname + \u0027?__PetcoInsurance\u0027]);\r\n} else if (document.location.pathname.toLowerCase().indexOf(\u0027\/shop\/singleshipmentordersummaryview\u0027) \u003e -1 \u0026\u0026 document.location.search.indexOf(\u0027PetcoCheckForUniqueEmail\u0027) \u003e -1) {\r\n    window._uxa.push([\u0027setQuery\u0027, \u0027?__ShippingInformation\u0027]);\r\n}\r\n\r\nif (typeof ClickTaleSetAllSensitive === \"function\") {\r\n    ClickTaleSetAllSensitive();\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.InitFuncs = window.ClickTaleSettings.PTC.InitFuncs || [];\r\nwindow.ClickTaleSettings.PTC.InitFuncs.push(function () {\r\n    var pcc = document.querySelector(\u0027script[src*=\"clicktale\"][src*=\"pcc\"]\u0027);\r\n    if (pcc) {\r\n        var versionmatch = pcc.src.match(\/DeploymentConfigName=(.+)\/i);\r\n        if (versionmatch \u0026\u0026 typeof ClickTaleExec === \u0027function\u0027) {\r\n            ClickTaleExec(\"console.info(\u0027\" + versionmatch[0] + \"\u0027);\");\r\n            ClickTaleEvent(\"Config: \" + versionmatch[1].replace(\/\\\u0026.+\/, \u0027\u0027));\r\n        }\r\n    }\r\n});\r\n\r\nfunction doUpload() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n        ClickTaleUploadPageNow();\r\n        window.ClickTaleSettings.PTC.UploadPageHappened = true;\r\n    };\r\n};\r\n\r\nfunction isReadyToRecord() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n\r\n        if (document.location.href.toLowerCase().indexOf(\"www.petco.com\/shop\/petcoinsuranceview\") \u003e -1) { \/\/SUP-1811\r\n            if (document.getElementById(\u0027root\u0027)) {\r\n                return !!(document.querySelectorAll(\u0027#root \u003e *\u0027).length \u003e 0);\r\n            }\r\n        }\r\n        if (document.location.href.indexOf(\"shop\/OrderItemDisplay\") \u003e -1) { \/\/PET-134\r\n            return !!document.querySelector(\u0027#cart2_rr\u0027);\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\nif (typeof ClickTaleDelayUploadPage === \u0027function\u0027) {\r\n    ClickTaleDelayUploadPage();\r\n\r\n    window.ClickTaleSettings.PTC.doOnlyWhen(doUpload, isReadyToRecord, 1000, 6, doUpload);\r\n\r\n    var initFuncs = window.ClickTaleSettings.PTC.InitFuncs;\r\n    for (var i = 0, initLen = initFuncs.length; i \u003c initLen; i++) {\r\n        if (typeof initFuncs[i] === \u0027function\u0027) {\r\n            initFuncs[i]();\r\n        }\r\n    }\r\n}\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    \r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\t\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\t\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\tvar wrScript = ClickTaleCreateDOMElement(\"script\");\r\n\twrScript.crossOrigin = \"anonymous\";\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\twrScript.async = true;\r\n\t\tif(ClickTaleGlobal.scripts.sri \u0026\u0026 ClickTaleGlobal.scripts.sri.hashes){\n        wrScript.integrity = ClickTaleGlobal.scripts.sri.hashes.wr;\n        wrScript.src = ClickTaleGlobal.scripts.sri.path + \"wr.js\";\n\t}else {\n        wrScript.src = window.ClickTaleScriptSource + \u0027latest-WR110.js\u0027;\r\n    }\r\n\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar ctVEconfig={VE_BASE_URL:\"https:\/\/ve-cec-na1.app.clicktale.com\/\",VE_PROXY_BASE_URL:\"https:\/\/vep-cec-na1.app.clicktale.com\/\"};!function(){try{var e=window.chrome,t=window.navigator\u0026\u0026window.navigator.vendor;null!=e\u0026\u0026\"Google Inc.\"===t\u0026\u0026window.addEventListener\u0026\u0026addEventListener(\"message\",o,!1);var n=window.location.search.substring(window.location.search.indexOf(\"ctAdvancedSearch=\")).split(\"\u0026\")[0].split(\"=\");\"ctAdvancedSearch\"==n[0]\u0026\u0026\"true\"==n[1]\u0026\u0026c(\"ctAdvancedSearchModule\",ctVEconfig.VE_BASE_URL+\"client\/dist\/advancedSearchModule.js\")}catch(e){}function o(e){var t;try{t=JSON.parse(e.data)}catch(e){return}!1!==new RegExp(\"(app[.]clicktale[.]com)($|:)\").test(e.origin)\u0026\u0026(window.ct_ve_parent_window=e.source,\"CT_testRules\"==t.name\u0026\u0026(sessionStorage.setItem(\"CT_testRules\",!0),console.log((new Date).toJSON(),\"PostPTC: testRules \",sessionStorage.getItem(\"CT_testRules\")),window.ct_ve_parent_window.postMessage({name:\"testRulesRecieved\",params:{}},\"*\")),\"CTload_ve\"===t.function\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026(function(){console.log((new Date).toJSON(),\"PostPTC: start loading test rules\");var e=ClickTaleGetPID();c(\"ctTestRulesModule\",ctVEconfig.VE_BASE_URL+\"rulesEngineContent\/TestPCC\/\"+e,function(){sessionStorage.setItem(\"CT_testRules_Loaded\",!0),console.log((new Date).toJSON(),\"PostPTC: test rules loaded\")})}(),c(\"ctVisualEditorClientModule\",ctVEconfig.VE_BASE_URL+\"client\/dist\/veClientModule.js\")))}function c(e,t,n){var o=function(e){return document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",e):document.createElement(e)}(\"script\");o.setAttribute(\"type\",\"text\/javascript\"),o.setAttribute(\"id\",e),o.src=t,void 0!==n\u0026\u0026(o.onload=n),document.getElementById(e)||document.body.appendChild(o)}}();");
				document.body.appendChild(script);
			})();
	}		

if (!ClickTaleGlobal.init.configFoundPTC)
{
			(function(){
		var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2020 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 6\r\n\/\/ WR destination: www27\r\n\/\/ WR version: latest\r\n\/\/ Recording ratio: 0.5\r\n\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n\r\n\r\n\tClickTaleSettings.Integration = ClickTaleSettings.Integration || {};\r\n\tClickTaleSettings.Integration.ProjectType = 3;\r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\n{\n\tClickTaleCreateDOMElement = function(tagName)\n\t{\n\t\tif (document.createElementNS)\n\t\t{\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\n\t\t}\n\t\treturn document.createElement(tagName);\n\t}\n}\n\nif (typeof (ClickTaleAppendInHead) != \"function\")\n{\n\tClickTaleAppendInHead = function(element)\n\t{\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\n\t\tparent.appendChild(element);\n\t}\n}\n\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\n{\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\n\t{\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\n\t\tscript.text = code;\n\t\treturn script;\n\t}\n}\t\r\n\r\n\r\n\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\n\/\/PTC Code Version 9.5\r\n\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nwindow.ClickTaleSettings.PTC = window.ClickTaleSettings.PTC || {};\r\nwindow.ClickTaleSettings.PTC.Integrations = window.ClickTaleSettings.PTC.Integrations || [];\r\nwindow.ClickTaleSettings.Compression = window.ClickTaleSettings.Compression || {};\r\nif (document.readyState === \u0027complete\u0027) {\r\n    window.ClickTaleIncludedOnWindowLoad = true;\r\n}\r\nwindow.ClickTaleIncludedOnDOMReady = true;\r\nwindow.ClickTaleSettings.PTC.EnableChangeMonitor = false;\r\nwindow.ClickTaleSettings.PTC.UploadPageHappened = false;\r\nwindow.ClickTaleSettings.PTC.IsMobile = false;\r\n\r\nvar pathName = window.location.pathname;\r\n\/\/PET-124\r\nvar staticIps = [\u0027142.44.139.37\u0027, \u0027144.217.75.65\u0027, \u0027166.70.84.176\u0027, \u0027208.51.62.230\u0027, \u002769.50.42.151\u0027, \u002750.77.83.173\u0027, \u0027209.150.72.20\u0027, \u002773.13.137.61\u0027, \u002769.195.220.238\u0027,\r\n    \u0027209.150.72.21\u0027, \u002713.56.137.180\u0027, \u002754.241.52.158\u0027, \u002734.224.255.169\u0027, \u002734.201.89.115\u0027, \u002735.168.141.9\u0027, \u002752.21.22.43\u0027, \u002735.168.185.185\u0027, \u002752.44.71.247\u0027, \u0027104.248.191.123\u0027\r\n];\r\n\r\nfor (var i = 1; i \u003c= 254; i++) {\r\n    staticIps.push(\"209.150.72.\" + i);\r\n    staticIps.push(\"209.150.73.\" + i);\r\n    if (i \u003e= 129) {\r\n        staticIps.push(\"69.195.220.\" + i);\r\n        staticIps.push(\"69.195.221.\" + i);\r\n    }\r\n}\r\n\r\nwindow.CEC = window.CEC || {};\r\nwindow.CEC.onInit = function () {\r\n    if (localStorage.getItem(\u0027ctShouldRec\u0027) === \u0027false\u0027) {\r\n        CEC.disable();\r\n    } else if (localStorage.getItem(\u0027ctShouldRec\u0027) !== \u0027true\u0027) {\r\n        \/**\r\n         *\r\n         * @param {XMLHttpRequest} xhr\r\n         *\/\r\n        CEC.onXhrCreated = function (xhr) {\r\n            var oldOpen = xhr.open;\r\n            xhr.open = function () {\r\n                var url = arguments[1];\r\n                if (typeof url === \u0027string\u0027) {\r\n                    if (\/auth\/.test(url)) {\r\n                        var oldSend = this.send;\r\n                        this.send = function () {\r\n                            var args = arguments;\r\n                            var tempThis = this;\r\n                            window.ClickTaleSettings.PTC.doOnlyWhen(function () {\r\n                                var clientIp = ClickTaleGetClientIp();\r\n                                if (staticIps.indexOf(clientIp) \u003e -1) {\r\n                                    localStorage.setItem(\u0027ctShouldRec\u0027, \u0027false\u0027);\r\n                                    CEC.shutdown();\r\n                                } else {\r\n                                    localStorage.setItem(\u0027ctShouldRec\u0027, \u0027true\u0027);\r\n                                    oldSend.apply(tempThis, args);\r\n                                }\r\n                            }, function () {\r\n                                return typeof ClickTaleGetClientIp === \u0027function\u0027 \u0026\u0026 ClickTaleGetClientIp();\r\n                            }, 500, 4);\r\n                        }\r\n                    }\r\n                }\r\n                oldOpen.apply(this, arguments);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n\r\nwindow.ClickTaleSettings.CheckAgentSupport = function (f, v) {\r\n    if (v.t == v.ED) {\r\n        window.ClickTaleSettings.Compression.Async = false;\r\n    }\r\n    if (v.m) {\r\n        window.ClickTaleSettings.PTC.IsMobile = true;\r\n    }\r\n    if (!(v.t == v.IE \u0026\u0026 v.v == 10)) {\r\n        window.ClickTaleSettings.PTC.EnableChangeMonitor = true;\r\n        window.ClickTaleSettings.PTC.ConfigChangeMonitor();\r\n    }\r\n    var fv = f(v);\r\n    window.ClickTaleSettings.PTC.okToRunPCC = fv;\r\n    return fv;\r\n};\r\n\r\nfunction yyyymmdd(currentDate) {\r\n    var mm = currentDate.getMonth() + 1; \/\/ getMonth() is zero-based\r\n    var dd = currentDate.getDate();\r\n    mm = mm \u003c 10 ? \"0\" + mm : mm;\r\n    dd = dd \u003c 10 ? \"0\" + dd : dd;\r\n    return [currentDate.getFullYear(), mm, dd].join(\u0027\u0027); \/\/ padding\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.startsWith = function (strToTest, str) {\r\n    return strToTest.lastIndexOf(str, 0) === 0;\r\n};\r\n\r\nwindow.ClickTaleSettings.Protocol = {\r\n    Method: \"ImpactRecorder\"\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.RulesObj = [{\r\n    selector: \"input#AccountNumber, input#SecurityCode\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    }\r\n}, {\r\n    selector: \"input[type=\u0027password\u0027], input[type=\u0027hidden\u0027], input[type=\u0027text\u0027], input[type=\u0027email\u0027], #shipping-address-state, .ctHidden\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    }\r\n}, { \/\/top 2 are a must\r\n    selector: \u0027.row span.small, form[name=\"paymentWalletDisplayForm\"] \u003e div.row div.spacer-sm-bottom h4, form[name=\"paymentWalletDisplayForm\"] \u003e div.row div.spacer-sm-bottom p, \\\r\n\t\tdiv#billing_summary strong, div#billing_summary div div, div#WC_OrderShippingBillingConfirmationPage_div_4 p strong, div#billing_summary strong, \\\r\n\t\tdiv#billing_summary div, div#WC_CheckoutPaymentAndBillingAddressSummaryf_div_3_\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    }\r\n}, { \/\/PET-28\r\n    selector: \u0027.form-control, .account-tile account-payment, [Id^=\"addressDetails\"]\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    }\r\n}, { \/\/PET-84\r\n    selector: \u0027.user-name strong, #ListName\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    }\r\n}, { \/\/PET-84\r\n    selector: \u0027address span\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    location: {\r\n        prop: \u0027href\u0027,\r\n        search: \/myAccountActivePage=shippingAddress\/i\r\n    }\r\n}, { \/\/PET-84\r\n    selector: \u0027#WC_UserRegistrationUpdateForm_FormInput_phoneNum_In_Register_1, #WC_UserRegistrationUpdateForm_FormInput_email2_In_Register_1, #WC_UserRegistrationUpdateForm_FormInput_Address1_In_Register_1, #WC_UserRegistrationUpdateForm_FormInput_Address2_In_Register_1, #WC_UserRegistrationUpdateForm_FormInput_City_In_Register_1, #WC_UserRegistrationUpdateForm_FormInput_State_In_Register_1, #WC_UserRegistrationUpdateForm_FormInput_ZipCode_In_Register_1\u0027,\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    },\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/UserRegistrationForm\/i\r\n    }\r\n}, { \/\/PET-84\r\n    selector: \u0027.account-payment strong, .account-payment li, .account-payment address, #ShippingAddressContainer div\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/shop\\\/PaymentWalletView\/i\r\n    }\r\n}, { \/\/PET-84\r\n    selector: \u0027#ncrFrame iframe\u0027,\r\n    changeMon: {\r\n        Attributes: [\u0027src\u0027],\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027src\u0027],\r\n        Text: true\r\n    },\r\n    location: {\r\n        prop: \u0027pathname\u0027,\r\n        search: \/shop\\\/PaymentWalletView\/i\r\n    }\r\n}, { \/\/PET-84\r\n    selector: \u0027.email\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    location: {\r\n        prop: \u0027href\u0027,\r\n        search: \/myAccountActivePage=emailPreferences\/i\r\n    }\r\n}, { \/\/PET-84\r\n    selector: \u0027.form-control-static\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    location: {\r\n        prop: \u0027href\u0027,\r\n        search: \/myAccountActivePage=myAccount\/i\r\n    }\r\n}, { \/\/PET-84\r\n    selector: \u0027.form-control-static\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    location: {\r\n        prop: \u0027href\u0027,\r\n        search: \/LogonForm\/i\r\n    }\r\n}, { \/\/ PET-85, PET-94, PET-112\r\n    selector: \u0027#petcoShippingAddressDisplayArea \u003e .container \u003e .row \u003e .col-7 \u003e p, #petcoShippingAddressDisplayArea \u003e .container \u003e .row \u003e .col-7 \u003e p \u003e strong, .customer-address-col2 \u003e p, .customer-address-col2 \u003e p \u003e strong, #petcoGuestShippingAddressDisplayArea \u003e .container \u003e .row \u003e .col-7 \u003e p, #petcoGuestShippingAddressDisplayArea \u003e .container \u003e .row \u003e .col-7 \u003e p \u003e strong, ul.address-picklist.dropdown-menu\u003eli\u003ea, ul.address-picklist.dropdown-menu\u003eli\u003ea\u003eb, #actualAddressDetails, #suggestedAddressDetails, #AllPartialMatches, #payPal\u003e.row p, #paypal\u003e.row p, #AptOrStreetMatchesContent [id^=\"AptOrStreetMatches_\"] .row .col-9\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    location: {\r\n        prop: \u0027href\u0027,\r\n        search: \/SingleShipmentOrderSummaryView\/i\r\n    }\r\n}, { \/\/SUP-1811\r\n    selector: \u0027#a-sp-root-template [onerror*=\\\"chrome-extension\\:\\\/\\\/\\\"]\u0027,\r\n    changeMon: {\r\n        Attributes: [\u0027src\u0027, \u0027onerror\u0027],\r\n        Text: false\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027src\u0027, \u0027onerror\u0027],\r\n        Text: false\r\n    }\r\n}];\r\n\r\n\r\n\r\n\r\nwindow.ClickTaleSettings.PTC.RulesObjRemoveEls = [{\r\n    changeMon: \".primary-nav-drawer, form #aria-context, form #aria-selection-event \",\r\n    rewriteApi: \"iframe[ctdep-id=\\\"dj_history\\\"], form #aria-context, form #aria-selection-event\",\r\n    changeMonLive: \u0027form #aria-context, form #aria-selection-event\u0027,\r\n    rewriteApiReplace: \u0027\u0027, \/\/comment from CashPage\r\n}];\r\n\r\n(function () {\r\n    if (typeof window.ClickTalePIISelector === \u0027string\u0027 \u0026\u0026 window.ClickTalePIISelector != \u0027\u0027) {\r\n        try {\r\n            var domNodes = document.querySelectorAll(window.ClickTalePIISelector);\r\n            window.ClickTaleSettings.PTC.RulesObj.push({\r\n                selector: window.ClickTalePIISelector,\r\n                changeMon: {\r\n                    Attributes: [\u0027value\u0027],\r\n                    Text: true\r\n                },\r\n                rewriteApi: {\r\n                    Attributes: [\u0027value\u0027],\r\n                    Text: true\r\n                }\r\n            });\r\n        } catch (err) {}\r\n    }\r\n})();\r\n\r\nwindow.ClickTaleSettings.PTC.AssetManager = {\r\n    isActive: true,\r\n    isNeedForImg: false,\r\n    subscriberId: \u0027233358\u0027,\r\n    pid: \u00276\u0027,\r\n    storageUrl: \u0027https:\/\/s3.amazonaws.com\/nv-p1-s3-assets-01\/\u0027,\r\n    prefixSpecialCharacters: false,\r\n    getPrefixUrl: function () {\r\n        return this.storageUrl + this.subscriberId + \u0027\/\u0027 + this.pid;\r\n    },\r\n    getFullURL: function (type, url) {\r\n        var AMUrl = \u0027\u0027\r\n        if (url) {\r\n            switch (type) {\r\n                case \u0027css\u0027:\r\n                    AMUrl = this.getPrefixUrl() + \u0027\/CSS\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n                    if (AMUrl \u0026\u0026 AMUrl.indexOf(\"contentpage-vd0fa00702ec1c959c3d8ee5319bed386.css\") \u003e -1) { \/\/PET-182\r\n                        AMUrl = AMUrl.replace(\/css\\\/\\\/\/gi, \u0027CSS\/https\/www.petco.com\/\u0027);\r\n                    }\r\n                    if (this.prefixSpecialCharacters \u0026\u0026 this.prefixSpecialCharacters.test(AMUrl)) {\r\n                        AMUrl = AMUrl.replace(\/\\?\/g, \"%253F\").replace(\/\\\u0026\/g, \"%26\").replace(\/\\=\/g, \"%3D\");\r\n                    } else {\r\n                        AMUrl = AMUrl.replace(\/\\?.*\/g, \"\");\r\n                    }\r\n                    break;\r\n                case \u0027image\u0027:\r\n                    AMUrl = this.getPrefixUrl() + \u0027\/IMAGE\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n                    break;\r\n            }\r\n\r\n        }\r\n        return !!AMUrl ? AMUrl : false;\r\n    },\r\n    makeChanges: function (bodyClone) {\r\n        if (this.pid \u0026\u0026 this.subscriberId) {\r\n            Array.prototype.forEach.call(bodyClone.querySelectorAll(\u0027ctdep-link[href][rel*=\"stylesheet\"]\u0027), function (el, ind) {\r\n                var hrefAttr = el.getAttribute(\u0027href\u0027);\r\n                if (hrefAttr.indexOf(window.ClickTaleSettings.PTC.AssetManager.storageUrl) == -1) {\r\n                    if (hrefAttr.indexOf(\u0027http\u0027) == -1) {\r\n                        var hrefLive = document.querySelector(\u0027link[href=\"\u0027 + hrefAttr + \u0027\"]\u0027);\r\n                        if (hrefLive \u0026\u0026 hrefLive.href) {\r\n                            hrefAttr = hrefLive.href;\r\n                        }\r\n                    }\r\n                    var finalCssURL = window.ClickTaleSettings.PTC.AssetManager.getFullURL(\u0027css\u0027, hrefAttr);\r\n                    el.setAttribute(\u0027href\u0027, finalCssURL);\r\n                }\r\n            });\r\n            if (this.isNeedForImg) {\r\n                Array.prototype.forEach.call(bodyClone.querySelectorAll(\u0027ctdep-img[src]\u0027), function (el, ind) {\r\n                    var srcAttr = el.getAttribute(\u0027src\u0027);\r\n                    if (srcAttr.indexOf(window.ClickTaleSettings.PTC.AssetManager.storageUrl) == -1) {\r\n                        if (srcAttr.indexOf(\u0027http\u0027) == -1) {\r\n                            var srcLive = document.querySelector(\u0027img[src=\"\u0027 + srcAttr + \u0027\"]\u0027);\r\n                            if (srcLive \u0026\u0026 srcLive.src) {\r\n                                srcAttr = srcLive.src;\r\n                            }\r\n                        }\r\n                        var finalImageURL = window.ClickTaleSettings.PTC.AssetManager.getFullURL(\u0027image\u0027, srcAttr);\r\n                        el.setAttribute(\u0027src\u0027, finalImageURL);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nClickTaleSettings.LocRefRew = function (url) {\r\n    if (url.toLowerCase().indexOf(\u0027shop\/petcoinsuranceview\u0027) \u003e -1) {\r\n        url = url + \u0027?__PetcoInsurance\u0027;\r\n        return url;\r\n    }\r\n    return url;\r\n}\r\nClickTaleSettings.LocationRewriter = ClickTaleSettings.LocRefRew;\r\nClickTaleSettings.ReferrerRewriter = ClickTaleSettings.LocRefRew;\r\n\r\nwindow.ClickTaleSettings.PTC.cloneNodeIE9 = function (innerHTML) {\r\n    if (innerHTML instanceof Element) {\r\n        innerHTML = innerHTML.innerHTML;\r\n    }\r\n\r\n    var reg = \/\u003c(area|base|br|col|command|embed|hr|input|keygen|link|menuitem|meta|param|source|track|wbr|img)[^\u003e]*\u003e\/gi;\r\n    var newNode = document.createElement(\u0027div\u0027);\r\n    var docFrag = document.createDocumentFragment();\r\n    docFrag.appendChild(newNode);\r\n    if (document.documentMode) {\r\n        innerHTML = innerHTML\r\n            .replace(\/\\$\/g, \u0027$$$$\u0027)\r\n            .replace(\/(\u003csvg[\\s\\S]+?\u003c\\\/svg\u003e)\/gi, function (m, g1) {\r\n                if (g1) {\r\n                    return \u0027\u003c!--clicktalesvgreplace \u0027 + g1.replace(\/\u003c!--[\\s\\S]+?--\u003e\/g, \u0027\u0027) + \u0027 --\u003e\u0027;\r\n                }\r\n                return m;\r\n            });\r\n    }\r\n    innerHTML = innerHTML\r\n        .replace(\/\u003cscript\\b([^\u003e]*)\u003e([\\s\\S]*?)\u003c\\\/script\u003e\/gi, \u0027\u003cscript\u003e\u003c\\\/script\u003e\u0027)\r\n        .replace(\/(\u003cdiv id=\"?ClickTaleDiv\"?[^\u003e]+\u003e)\\s*\u003cscript[^\u003e]+\u003e\u003c\\\/script\u003e\\s*(\u003c\\\/div\u003e)\/i, \u0027$1$2\u0027)\r\n        .replace(reg, \u0027$\u0026\u003c\\\/$1\u003e\u0027)\r\n        .replace(\/(\u003c\\\/?)([A-Za-z])\/g, \u0027$1ctdep-$2\u0027)\r\n        .replace(\/ctdep-style\/gi, \u0027style\u0027);\r\n\r\n    newNode.innerHTML = innerHTML;\r\n\r\n    return newNode;\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.ConfigChangeMonitor = function () {\r\n\r\n    if (window.ClickTaleSettings.PTC.EnableChangeMonitor) {\r\n\r\n        var a = document.createElement(\"script\"),\r\n            s = document.getElementsByTagName(\"script\")[0];\r\n        a.async = true;\r\n        a.crossOrigin = \"anonymous\";\r\n        a.type = \"text\/javascript\";\r\n        a.src = \"https:\/\/cdnssl.clicktale.net\/www\/ChangeMonitor-latest.js\";\r\n        s.parentNode.insertBefore(a, s);\r\n\r\n        window.ClickTaleSettings.ChangeMonitor = {\r\n            Enable: true,\r\n            LiveExclude: true,\r\n            AddressingMode: \"id\",\r\n            OnReadyHandler: function (changeMonitor) {\r\n                changeMonitor.observe();\r\n                if (typeof window.ClickTaleCMSelector === \u0027string\u0027 \u0026\u0026 window.ClickTaleCMSelector != \u0027\u0027) {\r\n                    changeMonitor.exclude({\r\n                        selector: window.ClickTaleCMSelector,\r\n                        multiple: true\r\n                    });\r\n                }\r\n\r\n                var CMRemrule = window.ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (CMRemrule) {\r\n                    for (var i = 0; i \u003c CMRemrule.length; i++) {\r\n                        var rule = CMRemrule[i];\r\n                        var CMlocation = rule[\u0027location\u0027];\r\n                        if ((!CMlocation || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) != -1))) {\r\n                            if (rule.changeMon) {\r\n                                changeMonitor.exclude(rule.changeMon);\r\n                            }\r\n                            if (rule.changeMonLive) {\r\n                                changeMonitor.exclude({\r\n                                    selector: rule.changeMonLive,\r\n                                    multiple: true\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            OnBeforeReadyHandler: function (settings) {\r\n                settings.Enable = window.ClickTaleGetUID ? !!ClickTaleGetUID() : false;\r\n                return settings;\r\n            },\r\n            Filters: {\r\n                MaxBufferSize: 1000000,\r\n                MaxElementCount: 10000\r\n            },\r\n            PII: {\r\n                Text: [],\r\n                Attributes: []\r\n            }\r\n        }\r\n        if (pathName.indexOf(\u0027petcostore\/product\u0027) \u003e -1) {\r\n            window.ClickTaleSettings.ChangeMonitor.AutoExclude = {\r\n                Enable: true,\r\n                Repeats: 50,\r\n                Interval: 200\r\n            }\r\n        } else {\r\n            window.ClickTaleSettings.ChangeMonitor.AutoExclude = {\r\n                Enable: true,\r\n                Repeats: 10,\r\n                Interval: 200\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        var RulesObj = window.ClickTaleSettings.PTC.RulesObj;\r\n        if (RulesObj) {\r\n            window.ClickTaleSettings.ChangeMonitor.PII.Text = window.ClickTaleSettings.ChangeMonitor.PII.Text || [];\r\n            window.ClickTaleSettings.ChangeMonitor.PII.Attributes = window.ClickTaleSettings.ChangeMonitor.PII.Attributes || [];\r\n            for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                var CMrule = RulesObj[i][\u0027changeMon\u0027];\r\n                var CMlocation = RulesObj[i][\u0027location\u0027];\r\n                if (!CMrule || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) === -1)) {\r\n                    continue;\r\n                }\r\n                var selector = RulesObj[i][\u0027selector\u0027];\r\n                var attributesArr = CMrule.Attributes;\r\n                if (attributesArr instanceof Array) {\r\n                    window.ClickTaleSettings.ChangeMonitor.PII.Attributes.push({\r\n                        selector: selector,\r\n                        transform: (function (attributesArr) {\r\n                            return function (el) {\r\n                                var attrs = el.attributes;\r\n                                var attrsToReturn = {}\r\n                                for (var i = 0; i \u003c attrs.length; i++) {\r\n                                    var name = attrs[i].nodeName;\r\n                                    attrsToReturn[name] = attrs[i].nodeValue;\r\n                                }\r\n                                for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                                    var attr = attributesArr[u];\r\n                                    var attrib = el.getAttribute(attr);\r\n                                    if (typeof attrib === \u0027string\u0027) {\r\n                                        attrsToReturn[attr] = attrib.replace(\/\\w\/g, \u0027-\u0027);\r\n                                    }\r\n                                }\r\n\r\n                                return attrsToReturn;\r\n                            }\r\n                        })(attributesArr)\r\n                    });\r\n                }\r\n                if (CMrule.Text) {\r\n                    window.ClickTaleSettings.ChangeMonitor.PII.Text.push({\r\n                        selector: [selector, function (elements) {\r\n                            var els = Array.prototype.reduce.call(elements, function (curr, add) {\r\n                                return curr.concat(Array.prototype.slice.call(add.childNodes));\r\n                            }, []);\r\n                            return Array.prototype.filter.call(els, function (child) {\r\n                                return !!(child \u0026\u0026 child.nodeType === 3);\r\n                            });\r\n                        }],\r\n                        transform: function (el) {\r\n                            return el.textContent.replace(\/\\w\/g, \u0027-\u0027);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.Compression = {\r\n    Method: function () {\r\n        return \"deflate\";\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.Transport = {\r\n    Legacy: false,\r\n    MaxConcurrentRequests: 5\r\n};\r\n\r\nwindow.ClickTaleSettings.RewriteRules = {\r\n    OnBeforeRewrite: function (rewriteApi) {\r\n        if (window.ClickTaleSettings.PTC.RulesObj) {\r\n            rewriteApi.add(function (buffer) {\r\n                var bodyClone = ClickTaleSettings.PTC.cloneNodeIE9(buffer);\r\n\r\n                if (window.ClickTaleSettings.PTC.AssetManager \u0026\u0026\r\n                    window.ClickTaleSettings.PTC.AssetManager.isActive \u0026\u0026\r\n                    typeof window.ClickTaleSettings.PTC.AssetManager.makeChanges == \u0027function\u0027) {\r\n                    window.ClickTaleSettings.PTC.AssetManager.makeChanges(bodyClone);\r\n                }\r\n\r\n\r\n                \/\/SUP-971\r\n                \/\/in OnBeforeRewrite =\u003e rewriteApi.add\r\n                var dataStyledComponents = document.querySelectorAll(\u0027style[data-styled]\u0027);\r\n                if (!!dataStyledComponents) {\r\n                    var cssRulesString = \u0027\u0027;\r\n                    Array.prototype.forEach.call(dataStyledComponents, function (el, ind) {\r\n                        if (!!el \u0026\u0026 el.sheet \u0026\u0026 (el.sheet.rules || el.sheet.cssRules)) {\r\n                            var cssRulesObj = !!el.sheet.rules ? el.sheet.rules : el.sheet.cssRules;\r\n                            for (var i in cssRulesObj) {\r\n                                if (cssRulesObj[i][\u0027cssText\u0027]) {\r\n                                    cssRulesString += cssRulesObj[i][\u0027cssText\u0027] + \u0027 \u0027;\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                    if (cssRulesString \u0026\u0026 !!bodyClone.querySelector(\u0027style[data-styled]\u0027)) {\r\n                        bodyClone.querySelector(\u0027style[data-styled]\u0027).innerHTML = cssRulesString;\r\n                    }\r\n                }\r\n                var dataStyledComponents1 = document.querySelectorAll(\u0027style[data-emotion]\u0027);\r\n                if (!!dataStyledComponents1) {\r\n                    var cssRulesString1 = \u0027\u0027;\r\n                    Array.prototype.forEach.call(dataStyledComponents1, function (el, ind) {\r\n                        if (!!el \u0026\u0026 el.sheet \u0026\u0026 (el.sheet.rules || el.sheet.cssRules)) {\r\n                            var cssRulesObj = !!el.sheet.rules ? el.sheet.rules : el.sheet.cssRules;\r\n                            for (var i in cssRulesObj) {\r\n                                if (cssRulesObj[i][\u0027cssText\u0027]) {\r\n                                    cssRulesString1 += cssRulesObj[i][\u0027cssText\u0027] + \u0027 \u0027;\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                    if (cssRulesString1 \u0026\u0026 !!bodyClone.querySelector(\u0027style[data-emotion]\u0027)) {\r\n                        bodyClone.querySelector(\u0027style[data-emotion]\u0027).innerHTML = cssRulesString1;\r\n                    }\r\n                }\r\n\r\n\r\n                var selectorReg = \/((?:^|,|\\s|\u003e|\\+|\\~)+)(\\w)\/g;\r\n\r\n                var RulesObj = window.ClickTaleSettings.PTC.RulesObj;\r\n                for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                    var rewriteApirule = RulesObj[i][\u0027rewriteApi\u0027];\r\n                    var rewriteApilocation = RulesObj[i][\u0027location\u0027];\r\n                    if (!rewriteApirule || (rewriteApilocation \u0026\u0026 document.location[rewriteApilocation[\u0027prop\u0027]].toLowerCase().search(rewriteApilocation.search) === -1)) {\r\n                        continue;\r\n                    }\r\n                    var selector = RulesObj[i][\u0027selector\u0027].replace(selectorReg, \u0027$1ctdep-$2\u0027);\r\n                    var elements = bodyClone.querySelectorAll(selector);\r\n\r\n                    Array.prototype.forEach.call(elements, function (el, ind) {\r\n                        var attributesArr = rewriteApirule.Attributes;\r\n                        if (attributesArr instanceof Array) {\r\n\r\n                            for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                                var attr = attributesArr[u];\r\n                                var attrib = el.getAttribute(attr);\r\n                                if (typeof attrib === \u0027string\u0027) {\r\n                                    el.setAttribute(attr, attrib.replace(\/\\w\/g, \u0027-\u0027));\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                        if (rewriteApirule.Text) {\r\n                            var children = el.childNodes;\r\n                            Array.prototype.forEach.call(children, function (child) {\r\n                                if (child \u0026\u0026 child.nodeType === 3) {\r\n                                    child.textContent = child.textContent.replace(\/\\w\/g, \u0027-\u0027);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                var RulesObjRemoveEls = window.ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (RulesObjRemoveEls) {\r\n                    for (var i = 0; i \u003c RulesObjRemoveEls.length; i++) {\r\n                        if (RulesObjRemoveEls[i].rewriteApi) {\r\n                            var elementsToRemove = bodyClone.querySelectorAll(RulesObjRemoveEls[i].rewriteApi.replace(selectorReg, \u0027$1ctdep-$2\u0027));\r\n                            Array.prototype.forEach.call(elementsToRemove, function (el, ind) {\r\n                                if (el.parentNode) {\r\n                                    el.parentNode.removeChild(el);\r\n                                }\r\n                            });\r\n                        }\r\n                        if (RulesObjRemoveEls[i].rewriteApiReplace) {\r\n                            var elementsToReplace = bodyClone.querySelectorAll(RulesObjRemoveEls[i].rewriteApiReplace.replace(selectorReg, \u0027$1ctdep-$2\u0027));\r\n                            Array.prototype.forEach.call(elementsToReplace, function (el, ind) {\r\n                                if (el.parentNode) {\r\n                                    var comment = document.createComment(el.outerHTML);\r\n                                    el.parentNode.replaceChild(comment, el);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n                var reg = \/\u003e\u003c\\\/(?:area|base|br|col|command|embed|hr|input|keygen|link|menuitem|meta|param|source|track|wbr|img)\u003e\/gi;\r\n                var clone = bodyClone.innerHTML.replace(\/ctdep-\/gi, \u0027\u0027).replace(reg, \u0027 \\\/\u003e\u0027).replace(\/\u003c!--clicktalesvgreplace ([\\s\\S]+?)--\u003e\/, \u0027$1\u0027);\r\n                return clone;\r\n            });\r\n        }\r\n        rewriteApi.add({\r\n            pattern: \/(\u003chead[^\u003e]*\u003e)\/i,\r\n            replace: \u0027$1\u003cscript type=\"text\\\/javascript\" class=\"cm-ignore\" src=\"https:\\\/\\\/cdnssl.clicktale.net\\\/www\\\/tc\\\/jquery.min.js\"\u003e\u003c\\\/script\u003e\u0027\r\n        });\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.doOnlyWhen = function (toDoHandler, toCheckHandler, interval, times, failHandler) {\r\n    if ((!toDoHandler) || (!toCheckHandler)) return;\r\n    if (typeof interval == \"undefined\") interval = 1000;\r\n    if (typeof times == \"undefined\") times = 10;\r\n    if (--times \u003c 0) {\r\n        if (typeof failHandler === \u0027function\u0027) {\r\n            failHandler();\r\n        }\r\n        return;\r\n    }\r\n    if (toCheckHandler()) {\r\n        toDoHandler();\r\n        return;\r\n    }\r\n    setTimeout(function () {\r\n        window.ClickTaleSettings.PTC.doOnlyWhen(toDoHandler, toCheckHandler, interval, times, failHandler);\r\n    }, interval);\r\n};\r\n\r\n\r\nfunction ClickTaleOnRecording() {\r\n\r\n\r\n    \/\/Start CAP Integrations\r\n    if (!window.ClickTaleSettings.PTC.IntegrationsReady) {\r\n        window.ClickTaleSettings.PTC.IntegrationsReady = true;\r\n\r\n        (function () {\r\n\r\n            function init(context) {\r\n\r\n                function sendToCS(csTypeVendorPrefix, csKey, csValue, csEventType, csPV) {\r\n                    csKey = csTypeVendorPrefix + csKey;\r\n\r\n                    window._uxa = window._uxa || [];\r\n                    _uxa.push([\"trackDynamicVariable\", {\r\n                        key: csKey,\r\n                        value: csValue\r\n                    }]);\r\n\r\n                    if (csEventType === \"etr\") {\r\n                        if (window.ClickTaleIsSavedRecording \u0026\u0026 ClickTaleIsSavedRecording() === false) {\r\n                            ClickTaleEventTrigger(\"@ET@ \" + csKey);\r\n                        }\r\n                    } else if (csEventType === \"reg\") {\r\n                        _uxa.push([\"trackPageEvent\", csKey + \" | \" + csValue]);\r\n                    }\r\n\r\n                    if (csPV) {\r\n                        _uxa.push([\"trackPageview\", window.location.pathname + \"?\" + csPV]);\r\n                    }\r\n                }\r\n\r\n                function generateReplayLink(pvNum) {\r\n                    pvNum = pvNum || 0;\r\n\r\n                    var uxaGet = _uxa.push([\"getSessionData\"]);\r\n                    if (uxaGet \u0026\u0026 uxaGet.projectId) {\r\n                        var pid = uxaGet.projectId;\r\n                        var uu = uxaGet.userId;\r\n                        var sn = uxaGet.sessionNumber;\r\n                        var pvid = uxaGet.pageNumber - pvNum;\r\n\r\n                        if (pid \u0026\u0026 uu \u0026\u0026 sn \u0026\u0026 pvid) {\r\n                            var intLink = \"https:\/\/app.contentsquare.com\/quick-playback\/index.html?pid=\" + pid + \"\u0026uu=\" + uu + \"\u0026sn=\" + sn + \"\u0026pvid=\" + pvid;\r\n                            return intLink;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                \/*\r\n                 *Name: LivePerson CAP Integration\r\n                 *Version: 1.14\r\n                 *Required Shared Components: ClickTaleOnRecording, Self Invoking function, _uxa afterPageView callback, sendToCS, generateReplayLink\r\n                 *\/\r\n\r\n                var campaignDisplayed = false;\r\n                var chatStarted = false;\r\n                var chatEnded = false;\r\n\r\n                function liveEngageCallback(e) {\r\n\r\n                    var tvp = \"CH_LP_\";\r\n\r\n                    if (e \u0026\u0026 (e.state || e.state === 0) \u0026\u0026 e.engagementName) {\r\n                        var state = e.state;\r\n                        var engagementName = e.engagementName;\r\n                        var skill = e.skill;\r\n                        if (!skill) {\r\n                            skill = \"No skill\";\r\n                        }\r\n\r\n                        if (state === 0 \u0026\u0026 !campaignDisplayed) {\r\n                            campaignDisplayed = true;\r\n\r\n                            sendToCS(tvp, \"Campaign Displayed\", engagementName, 0, \"cs_liveperson=campaign_displayed_\" + engagementName);\r\n                        }\r\n\r\n                        if (state === \"chatting\" \u0026\u0026 !chatStarted) {\r\n                            chatStarted = true;\r\n\r\n                            sendToCS(tvp, \"Chat Started\", engagementName, \"etr\", \"cs_liveperson=chat_started_\" + engagementName);\r\n                            sendToCS(tvp, \"Skill\", skill);\r\n\r\n                            if (window.ClickTaleIsRecording \u0026\u0026 ClickTaleIsRecording()) {\r\n                                ClickTaleStop();\r\n                                ClickTaleUploadPage();\r\n                                ClickTaleLogical(document.location.href);\r\n                            }\r\n\r\n                            if (lpTag.sdes) {\r\n                                var intLink = generateReplayLink();\r\n                                if (intLink) {\r\n                                    lpTag.sdes = lpTag.sdes || [];\r\n                                    lpTag.sdes.push({\r\n                                        \"type\": \"ctmrinfo\",\r\n                                        \"info\": {\r\n                                            \"ctype\": intLink\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                        if (state === \"ended\" \u0026\u0026 !chatEnded) {\r\n                            chatEnded = true;\r\n\r\n                            sendToCS(tvp, \"Chat Ended\", engagementName, 0, \"cs_liveperson=chat_ended_\" + engagementName);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                function startLPIntegration() {\r\n                    setTimeout(function () {\r\n\r\n                        if (lpTag.events \u0026\u0026 lpTag.events.bind) {\r\n                            lpTag.events.bind({\r\n                                appName: \"*\",\r\n                                eventName: \"*\",\r\n                                async: true,\r\n                                triggerOnce: false,\r\n                                func: liveEngageCallback\r\n                            });\r\n                        }\r\n\r\n                    }, 500);\r\n                };\r\n\r\n                var integrationLPstarted = false;\r\n\r\n                var lpTag = window.lpTag;\r\n                if (lpTag) {\r\n                    startLPIntegration();\r\n                } else {\r\n                    Object.defineProperty(window, \"lpTag\", {\r\n                        configurable: true,\r\n                        get: function () {\r\n                            return lpTag;\r\n                        },\r\n                        set: function (n) {\r\n                            lpTag = n;\r\n                            if (!integrationLPstarted) {\r\n                                integrationLPstarted = true;\r\n                                startLPIntegration();\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                \/\/End LivePerson CAP Integration\r\n\r\n\r\n                \/*\r\n                 *Name: Medallia CAP Integration\r\n                 *Version: 1.14\r\n                 *Required Shared Components: ClickTaleOnRecording, Self Invoking function, _uxa afterPageView callback, sendToCS, generateReplayLink\r\n                 *\/\r\n                function startMDIntegration() {\r\n\r\n                    var tvp = \"FB_MD_\";\r\n\r\n                    window.addEventListener(\"MDigital_Feedback_Button_Clicked\", function (e) {\r\n                        if (e \u0026\u0026 e.detail \u0026\u0026 e.detail.Form_ID) {\r\n                            var surveyID = e.detail.Form_ID.toString();\r\n\r\n                            sendToCS(tvp, \"Feedback Button Clicked\", \"Survey ID : \" + surveyID, 0, \"cs_medallia=feedback_button_clicked_\" + surveyID);\r\n                        }\r\n                    });\r\n\r\n                    window.addEventListener(\"MDigital_Invite_Displayed\", function (e) {\r\n                        if (e \u0026\u0026 e.detail \u0026\u0026 e.detail.Form_ID) {\r\n                            var surveyID = e.detail.Form_ID.toString();\r\n\r\n                            sendToCS(tvp, \"Feedback Invite Displayed\", \"Survey ID : \" + surveyID, 0, \"cs_medallia=feedback_invite_displayed_\" + surveyID);\r\n                        }\r\n                    });\r\n\r\n                    window.addEventListener(\"MDigital_Invite_Accepted\", function (e) {\r\n                        if (e \u0026\u0026 e.detail \u0026\u0026 e.detail.Form_ID) {\r\n                            var surveyID = e.detail.Form_ID.toString();\r\n\r\n                            sendToCS(tvp, \"Feedback Invite Accepted\", \"Survey ID : \" + surveyID, 0, \"cs_medallia=feedback_invite_accepted_\" + surveyID);\r\n                        }\r\n                    });\r\n\r\n                    window.addEventListener(\"MDigital_Submit_Feedback\", function (e) {\r\n                        if (e \u0026\u0026 e.detail) {\r\n                            var ed = e.detail;\r\n                            if (ed.Feedback_UUID \u0026\u0026 ed.Form_ID \u0026\u0026 ed.Form_Type) {\r\n                                var surveyID = ed.Form_ID.toString();\r\n                                var feedbackUUID = ed.Feedback_UUID;\r\n                                var formType = ed.Form_Type;\r\n\r\n                                sendToCS(tvp, \"Feedback Submitted\", \"Survey ID : \" + surveyID, \"etr\", \"cs_medallia=feedback_submitted_\" + surveyID);\r\n                                sendToCS(tvp, \"Feedback UUID\", feedbackUUID);\r\n                                sendToCS(tvp, \"Feedback Form Type\", formType);\r\n                            }\r\n\r\n                            if (ed.Content) {\r\n                                for (var i = 0; i \u003c ed.Content.length; i++) {\r\n                                    if (ed.Content[i].type.toLowerCase().indexOf(\"grading\") \u003e -1 ||\r\n                                        ed.Content[i].type.toLowerCase().indexOf(\"nps\") \u003e -1) {\r\n                                        var value = ed.Content[i].value;\r\n                                        if (value) {\r\n                                            var rating = parseInt(value);\r\n                                            var ratingName = ed.Content[i].unique_name;\r\n\r\n                                            if (typeof rating === \"number\") {\r\n                                                if (ed.Content[i].type.toLowerCase().indexOf(\"nps\") \u003e -1) {\r\n                                                    sendToCS(\"NPS Rating \" + ratingName, rating);\r\n                                                } else {\r\n                                                    sendToCS(\"Rating \" + ratingName, rating);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    var intLink = generateReplayLink();\r\n                    if (intLink) {\r\n                        window.ClickTale.KampyleLink = intLink;\r\n                    }\r\n\r\n                }\r\n\r\n                var integrationMDStarted = false;\r\n\r\n                var MDIGITAL = window.MDIGITAL;\r\n                if (MDIGITAL) {\r\n                    startMDIntegration();\r\n                } else {\r\n                    Object.defineProperty(window, \"MDIGITAL\", {\r\n                        configurable: true,\r\n                        get: function () {\r\n                            return MDIGITAL;\r\n                        },\r\n                        set: function (n) {\r\n                            MDIGITAL = n;\r\n                            if (!integrationMDStarted) {\r\n                                integrationMDStarted = true;\r\n                                startMDIntegration();\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                \/\/Medallia CAP Integration End\r\n\r\n\r\n                \/*\r\n                 *Name: Blue Triangle CAP Integration\r\n                 *Version: 1.13\r\n                 *Required Shared Components: ClickTaleOnRecording, Self Invoking function, _uxa afterPageView callback, sendToCS, generateReplayLink\r\n                 *\/\r\n                if (ClickTaleIsSavedRecording()) {\r\n\r\n                    function startBTintegration() {\r\n                        setTimeout(function () {\r\n\r\n                            var tvp = \"APM_BT_\";\r\n\r\n                            var intLink = generateReplayLink();\r\n                            if (intLink) {\r\n                                var uxaGet = _uxa.push([\"getSessionData\"]);\r\n                                var csPID = uxaGet.projectId;\r\n\r\n                                bttUT.ctGif({\r\n                                    csPID: csPID,\r\n                                    csReplayURL: intLink\r\n                                });\r\n\r\n                                if (bttUT.sessionID) {\r\n                                    sendToCS(tvp, \"SessionID\", bttUT.sessionID);\r\n                                }\r\n                            }\r\n\r\n                        }, 500);\r\n                    }\r\n\r\n                    var integrationBTstarted = false;\r\n\r\n                    var bttUT = window.bttUT;\r\n                    if (bttUT) {\r\n                        startBTintegration();\r\n                    } else {\r\n                        Object.defineProperty(window, \"bttUT\", {\r\n                            configurable: true,\r\n                            get: function () {\r\n                                return bttUT;\r\n                            },\r\n                            set: function (n) {\r\n                                bttUT = n;\r\n                                if (!integrationBTstarted) {\r\n                                    integrationBTstarted = true;\r\n                                    startBTintegration();\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                \/\/Blue Triangle CAP Integration End\r\n            }\r\n\r\n            function callback(context) {\r\n                if (!disableCallback) {\r\n                    disableCallback = true;\r\n                    init(context);\r\n\r\n                    if (window.CS_CONF) {\r\n                        CS_CONF.integrations = CS_CONF.integrations || [];\r\n                        CS_CONF.integrations.push(\"LivePerson\");\r\n                        CS_CONF.integrations.push(\"Medallia\");\r\n                        CS_CONF.integrations.push(\"Blue Triangle\");\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            var disableCallback = false;\r\n\r\n            window._uxa = window._uxa || [];\r\n            _uxa.push([\"afterPageView\", callback]);\r\n        })();\r\n    }\r\n    \/\/End CAP Integrations\r\n};\r\n\r\n\/\/ End of user-defined pre WR code\r\n\r\n\r\nvar isHttps = document.location.protocol == \u0027https:\u0027,\r\n\tscriptSource = window.ClickTaleScriptSource,\r\n\tpccSource = scriptSource;\r\n\r\nif (!scriptSource) {\r\n\twindow.ClickTaleScriptSource = isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/www\/\u0027;\r\n}\r\n\r\n\r\nif(!ClickTaleGlobal.init.pccRequested) {\r\n\t\tvar pccSrc = pccSource ? pccSource : (isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/pcc\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/pcc\/\u0027);\r\n\t    pccSrc += \u002770ae08c9-d6c8-4bc7-910d-b098d8316158.js?DeploymentConfigName=Release_20201009\u0026Version=1\u0027;\r\n\t\t\tvar pccScriptElement = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\tpccScriptElement.type = \"text\/javascript\";\r\n\tpccScriptElement.crossOrigin = \"anonymous\";\r\n\t\tpccScriptElement.async = true;\r\n\t\tif(ClickTaleGlobal.scripts.sri \u0026\u0026 ClickTaleGlobal.scripts.sri.hashes){\n        pccScriptElement.integrity = ClickTaleGlobal.scripts.sri.hashes.pcc;\n        pccScriptElement.src = ClickTaleGlobal.scripts.sri.path + \"pcc.js\";\n\t}else {\n       pccScriptElement.src = pccSrc;\n    }\n\t\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(pccScriptElement);\n\t\tClickTaleGlobal.init.pccRequested = true;\r\n}\r\n\t\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=6, \r\n\t\tRatio=0.5, \r\n\t\tPartitionPrefix=\"www27\",\r\n\t\tSubsId=233358;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\t\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\twindow._uxa = window._uxa || [];\r\n\r\nif (document.location.pathname.toLowerCase().indexOf(\u0027shop\/petcoinsuranceview\u0027) \u003e -1 ||\r\n    document.location.pathname.toLowerCase().indexOf(\u0027insurance\/d2c\u0027) \u003e -1) {\r\n    window._uxa.push([\u0027setPath\u0027, document.location.pathname + \u0027?__PetcoInsurance\u0027]);\r\n} else if (document.location.pathname.toLowerCase().indexOf(\u0027\/shop\/singleshipmentordersummaryview\u0027) \u003e -1 \u0026\u0026 document.location.search.indexOf(\u0027PetcoCheckForUniqueEmail\u0027) \u003e -1) {\r\n    window._uxa.push([\u0027setQuery\u0027, \u0027?__ShippingInformation\u0027]);\r\n}\r\n\r\nif (typeof ClickTaleSetAllSensitive === \"function\") {\r\n    ClickTaleSetAllSensitive();\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.InitFuncs = window.ClickTaleSettings.PTC.InitFuncs || [];\r\nwindow.ClickTaleSettings.PTC.InitFuncs.push(function () {\r\n    var pcc = document.querySelector(\u0027script[src*=\"clicktale\"][src*=\"pcc\"]\u0027);\r\n    if (pcc) {\r\n        var versionmatch = pcc.src.match(\/DeploymentConfigName=(.+)\/i);\r\n        if (versionmatch \u0026\u0026 typeof ClickTaleExec === \u0027function\u0027) {\r\n            ClickTaleExec(\"console.info(\u0027\" + versionmatch[0] + \"\u0027);\");\r\n            ClickTaleEvent(\"Config: \" + versionmatch[1].replace(\/\\\u0026.+\/, \u0027\u0027));\r\n        }\r\n    }\r\n});\r\n\r\nfunction doUpload() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n        ClickTaleUploadPageNow();\r\n        window.ClickTaleSettings.PTC.UploadPageHappened = true;\r\n    };\r\n};\r\n\r\nfunction isReadyToRecord() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n\r\n        if (document.location.href.toLowerCase().indexOf(\"www.petco.com\/shop\/petcoinsuranceview\") \u003e -1) { \/\/SUP-1811\r\n            if (document.getElementById(\u0027root\u0027)) {\r\n                return !!(document.querySelectorAll(\u0027#root \u003e *\u0027).length \u003e 0);\r\n            }\r\n        }\r\n        if (document.location.href.indexOf(\"shop\/OrderItemDisplay\") \u003e -1) { \/\/PET-134\r\n            return !!document.querySelector(\u0027#cart2_rr\u0027);\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\nif (typeof ClickTaleDelayUploadPage === \u0027function\u0027) {\r\n    ClickTaleDelayUploadPage();\r\n\r\n    window.ClickTaleSettings.PTC.doOnlyWhen(doUpload, isReadyToRecord, 1000, 6, doUpload);\r\n\r\n    var initFuncs = window.ClickTaleSettings.PTC.InitFuncs;\r\n    for (var i = 0, initLen = initFuncs.length; i \u003c initLen; i++) {\r\n        if (typeof initFuncs[i] === \u0027function\u0027) {\r\n            initFuncs[i]();\r\n        }\r\n    }\r\n}\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    \r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\t\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\t\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\tvar wrScript = ClickTaleCreateDOMElement(\"script\");\r\n\twrScript.crossOrigin = \"anonymous\";\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\twrScript.async = true;\r\n\t\tif(ClickTaleGlobal.scripts.sri \u0026\u0026 ClickTaleGlobal.scripts.sri.hashes){\n        wrScript.integrity = ClickTaleGlobal.scripts.sri.hashes.wr;\n        wrScript.src = ClickTaleGlobal.scripts.sri.path + \"wr.js\";\n\t}else {\n        wrScript.src = window.ClickTaleScriptSource + \u0027WR-latest.js\u0027;\r\n    }\r\n\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar ctVEconfig={VE_BASE_URL:\"https:\/\/ve-cec-na1.app.clicktale.com\/\",VE_PROXY_BASE_URL:\"https:\/\/vep-cec-na1.app.clicktale.com\/\"};!function(){try{var e=window.chrome,t=window.navigator\u0026\u0026window.navigator.vendor;null!=e\u0026\u0026\"Google Inc.\"===t\u0026\u0026window.addEventListener\u0026\u0026addEventListener(\"message\",o,!1);var n=window.location.search.substring(window.location.search.indexOf(\"ctAdvancedSearch=\")).split(\"\u0026\")[0].split(\"=\");\"ctAdvancedSearch\"==n[0]\u0026\u0026\"true\"==n[1]\u0026\u0026c(\"ctAdvancedSearchModule\",ctVEconfig.VE_BASE_URL+\"client\/dist\/advancedSearchModule.js\")}catch(e){}function o(e){var t;try{t=JSON.parse(e.data)}catch(e){return}!1!==new RegExp(\"(app[.]clicktale[.]com)($|:)\").test(e.origin)\u0026\u0026(window.ct_ve_parent_window=e.source,\"CT_testRules\"==t.name\u0026\u0026(sessionStorage.setItem(\"CT_testRules\",!0),console.log((new Date).toJSON(),\"PostPTC: testRules \",sessionStorage.getItem(\"CT_testRules\")),window.ct_ve_parent_window.postMessage({name:\"testRulesRecieved\",params:{}},\"*\")),\"CTload_ve\"===t.function\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026(function(){console.log((new Date).toJSON(),\"PostPTC: start loading test rules\");var e=ClickTaleGetPID();c(\"ctTestRulesModule\",ctVEconfig.VE_BASE_URL+\"rulesEngineContent\/TestPCC\/\"+e,function(){sessionStorage.setItem(\"CT_testRules_Loaded\",!0),console.log((new Date).toJSON(),\"PostPTC: test rules loaded\")})}(),c(\"ctVisualEditorClientModule\",ctVEconfig.VE_BASE_URL+\"client\/dist\/veClientModule.js\")))}function c(e,t,n){var o=function(e){return document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",e):document.createElement(e)}(\"script\");o.setAttribute(\"type\",\"text\/javascript\"),o.setAttribute(\"id\",e),o.src=t,void 0!==n\u0026\u0026(o.onload=n),document.getElementById(e)||document.body.appendChild(o)}}();");
		document.body.appendChild(script);	})();
	}

//Signature:c6PAHsLVZ06GAPD7AUzQ5nu4ztp3XitWsgxRavgofkTXxA5lIAsxAECfZ4No1AZw873De2eS0IwWlrzaUlRlyXbTNlDHf51V1t+BmNjMF0dFWUacIMnSu4ZTpAAY52GDPlP6Moai9c1OkIp6tkdkxXxPH6Pj1+RiFAyQycYdKxU=